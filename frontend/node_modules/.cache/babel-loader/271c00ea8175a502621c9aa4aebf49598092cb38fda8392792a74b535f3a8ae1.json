{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\discopony\\\\Desktop\\\\MSchool\\\\Notion automation\\\\Railway_Rent\\\\frontend\\\\src\\\\components\\\\EquipmentList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport API_BASE_URL from \"../config\";\nimport \"./EquipmentList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst modalRoot = document.getElementById(\"modal-root\") || (() => {\n  const el = document.createElement(\"div\");\n  el.id = \"modal-root\";\n  document.body.appendChild(el);\n  return el;\n})();\nconst EquipmentList = ({\n  onSelect,\n  onClose,\n  selectedEquipment,\n  bookingsInfo,\n  startDate,\n  endDate,\n  bookingId\n}) => {\n  _s();\n  const listRef = useRef(null);\n  const [equipment, setEquipment] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedItems, setSelectedItems] = useState(Array.isArray(selectedEquipment) ? selectedEquipment : []);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [expandedCategories, setExpandedCategories] = useState({});\n  useEffect(() => {\n    const fetchEquipment = async () => {\n      try {\n        let url = `${API_BASE_URL}/inventory`;\n\n        // Если указаны даты аренды, используем новый API endpoint для расчета доступности\n        if (startDate && endDate) {\n          const params = new URLSearchParams({\n            start_date: startDate,\n            end_date: endDate\n          });\n          if (bookingId) {\n            params.append('exclude_booking_id', bookingId);\n          }\n          url = `${API_BASE_URL}/inventory/available?${params.toString()}`;\n          console.log(`📅 Используем API с датами: ${url}`);\n        } else {\n          console.log(`📅 Используем обычный API без дат: ${url}`);\n        }\n        const response = await fetch(url);\n        if (!response.ok) {\n          throw new Error(`Ошибка загрузки: ${response.status}`);\n        }\n        const data = await response.json();\n        // Проверяем, есть ли странные значения\n        const strangeItems = data.filter(item => item.total > 20 || item.available !== undefined && item.available > 20);\n        if (strangeItems.length > 0) {\n          console.warn(\"⚠️ Найдены элементы с большими значениями:\", strangeItems);\n        }\n        setEquipment(data);\n      } catch (error) {\n        console.error(\"Ошибка загрузки оборудования:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchEquipment();\n    const handleClickOutside = event => {\n      if (listRef.current && !listRef.current.contains(event.target)) {\n        onClose();\n      }\n    };\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [onClose, startDate, endDate, bookingId]);\n  const updateQuantity = (itemId, newQuantity) => {\n    console.log(`🔢 updateQuantity: itemId=${itemId}, newQuantity=${newQuantity}`);\n    setSelectedItems(prevSelected => prevSelected.map(item => {\n      if (item.id === itemId) {\n        // Используем available из API, если доступно, иначе fallback на старую логику\n        const availableQuantity = item.available !== undefined ? item.available : item.total - (item.rented || 0);\n        const finalQuantity = Math.max(1, Math.min(newQuantity || 1, availableQuantity));\n        console.log(`🔢 item=${item.name}, available=${availableQuantity}, finalQuantity=${finalQuantity}`);\n        return {\n          ...item,\n          quantity: finalQuantity\n        };\n      }\n      return item;\n    }));\n  };\n  const removeItem = itemId => {\n    setSelectedItems(prevSelected => prevSelected.filter(item => item.id !== itemId));\n  };\n  const toggleSelection = item => {\n    console.log(`✅ toggleSelection: item=${item.name}, total=${item.total}, available=${item.available}`);\n    setSelectedItems(prevSelected => {\n      if (!Array.isArray(prevSelected)) prevSelected = [];\n      const existingItem = prevSelected.find(selected => selected.id === item.id);\n      if (existingItem) {\n        console.log(`➖ Удаляем из выбранных: ${item.name}`);\n        return prevSelected.filter(selected => selected.id !== item.id);\n      } else {\n        console.log(`➕ Добавляем в выбранные: ${item.name} x1`);\n        return [...prevSelected, {\n          ...item,\n          quantity: 1\n        }];\n      }\n    });\n  };\n  const handleConfirm = () => {\n    onSelect(Array.isArray(selectedItems) ? selectedItems : []);\n    onClose();\n  };\n  const collator = new Intl.Collator(\"ru\", {\n    numeric: true,\n    sensitivity: \"base\"\n  });\n  const groupedEquipment = equipment.reduce((acc, item) => {\n    if (!acc[item.category]) acc[item.category] = [];\n    acc[item.category].push(item);\n    return acc;\n  }, {});\n  Object.keys(groupedEquipment).forEach(category => {\n    groupedEquipment[category].sort((a, b) => collator.compare(a.name, b.name));\n  });\n  const toggleCategory = category => {\n    setExpandedCategories(prev => ({\n      ...prev,\n      [category]: !prev[category]\n    }));\n  };\n  const filteredEquipment = equipment.filter(item => item.name.toLowerCase().includes(searchTerm.toLowerCase())).sort((a, b) => collator.compare(a.name, b.name));\n  const isSearching = searchTerm.trim().length > 0;\n  return /*#__PURE__*/ReactDOM.createPortal(/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"equipment-modal\",\n    ref: listRef,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"equipment-modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043E\\u0431\\u043E\\u0440\\u0443\\u0434\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected-equipment\",\n        children: selectedItems.map(selectedItem => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selected-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"remove-item\",\n            onClick: () => removeItem(selectedItem.id),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [selectedItem.name, \" \\xD7\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: selectedItem.quantity || 1,\n            onChange: e => updateQuantity(selectedItem.id, parseInt(e.target.value) || 1),\n            min: \"1\",\n            max: selectedItem.available !== undefined ? selectedItem.available : (typeof selectedItem.total === 'number' ? selectedItem.total : 0) - (typeof selectedItem.rented === 'number' ? selectedItem.rented : 0),\n            className: \"selected-quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 29\n          }, this)]\n        }, selectedItem.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\u041F\\u043E\\u0438\\u0441\\u043A...\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value),\n        className: \"equipment-search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"equipment-list\",\n        children: isSearching ? filteredEquipment.map(item => {\n          const selectedItem = selectedItems.find(selected => selected.id === item.id);\n          // Используем available из API, если доступно, иначе fallback на старую логику\n          const availableQuantity = item.available !== undefined ? item.available : item.total - (item.rented || 0);\n          const isAvailable = availableQuantity > 0;\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"equipment-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"equipment-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: !!selectedItem,\n                onChange: () => toggleSelection(item),\n                disabled: !isAvailable\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `availability ${isAvailable ? \"available\" : \"unavailable\"}`,\n              children: [isAvailable ? `Доступно: ${availableQuantity}` : \"Нет в наличии\", item.occupied && item.occupied > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"occupied-info\",\n                children: [\"\\u0417\\u0430\\u043D\\u044F\\u0442\\u043E: \", item.occupied, \" \\u0438\\u0437 \", item.total]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 41\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 37\n          }, this);\n        }) : Object.entries(groupedEquipment).map(([category, items]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"equipment-category\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"category-toggle\",\n            onClick: () => toggleCategory(category),\n            children: [expandedCategories[category] ? \"▼\" : \"▶\", \" \", category]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 37\n          }, this), expandedCategories[category] && /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: items.map(item => {\n              const selectedItem = selectedItems.find(selected => selected.id === item.id);\n              // Используем available из API, если доступно, иначе fallback на старую логику\n              const availableQuantity = item.available !== undefined ? item.available : item.total - (item.rented || 0);\n              const isAvailable = availableQuantity > 0;\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"equipment-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"equipment-label\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    checked: !!selectedItem,\n                    onChange: () => toggleSelection(item),\n                    disabled: !isAvailable\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 234,\n                    columnNumber: 61\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: item.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 61\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 57\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `availability ${isAvailable ? \"available\" : \"unavailable\"}`,\n                  children: [isAvailable ? `Доступно: ${availableQuantity}` : \"Нет в наличии\", item.occupied && item.occupied > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"occupied-info\",\n                    children: [\"\\u0417\\u0430\\u043D\\u044F\\u0442\\u043E: \", item.occupied, \" \\u0438\\u0437 \", item.total]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 65\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 57\n                }, this)]\n              }, item.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 53\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 41\n          }, this)]\n        }, category, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          className: \"button button-cancel\",\n          children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleConfirm,\n          className: \"button button-confirm\",\n          children: \"\\u0413\\u043E\\u0442\\u043E\\u0432\\u043E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 9\n  }, this), modalRoot);\n};\n_s(EquipmentList, \"nZS8KQzxOQrlQBUkz8+BSg1bnlk=\");\n_c = EquipmentList;\nexport default EquipmentList;\nvar _c;\n$RefreshReg$(_c, \"EquipmentList\");","map":{"version":3,"names":["React","useState","useEffect","useRef","ReactDOM","API_BASE_URL","jsxDEV","_jsxDEV","modalRoot","document","getElementById","el","createElement","id","body","appendChild","EquipmentList","onSelect","onClose","selectedEquipment","bookingsInfo","startDate","endDate","bookingId","_s","listRef","equipment","setEquipment","loading","setLoading","selectedItems","setSelectedItems","Array","isArray","searchTerm","setSearchTerm","expandedCategories","setExpandedCategories","fetchEquipment","url","params","URLSearchParams","start_date","end_date","append","toString","console","log","response","fetch","ok","Error","status","data","json","strangeItems","filter","item","total","available","undefined","length","warn","error","handleClickOutside","event","current","contains","target","addEventListener","removeEventListener","updateQuantity","itemId","newQuantity","prevSelected","map","availableQuantity","rented","finalQuantity","Math","max","min","name","quantity","removeItem","toggleSelection","existingItem","find","selected","handleConfirm","collator","Intl","Collator","numeric","sensitivity","groupedEquipment","reduce","acc","category","push","Object","keys","forEach","sort","a","b","compare","toggleCategory","prev","filteredEquipment","toLowerCase","includes","isSearching","trim","createPortal","className","ref","children","fileName","_jsxFileName","lineNumber","columnNumber","selectedItem","onClick","type","value","onChange","e","parseInt","placeholder","isAvailable","checked","disabled","occupied","entries","items","_c","$RefreshReg$"],"sources":["C:/Users/discopony/Desktop/MSchool/Notion automation/Railway_Rent/frontend/src/components/EquipmentList.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport API_BASE_URL from \"../config\";\nimport \"./EquipmentList.css\";\n\nconst modalRoot = document.getElementById(\"modal-root\") || (() => {\n    const el = document.createElement(\"div\");\n    el.id = \"modal-root\";\n    document.body.appendChild(el);\n    return el;\n})();\n\nconst EquipmentList = ({ onSelect, onClose, selectedEquipment, bookingsInfo, startDate, endDate, bookingId }) => {\n    const listRef = useRef(null);\n    const [equipment, setEquipment] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [selectedItems, setSelectedItems] = useState(Array.isArray(selectedEquipment) ? selectedEquipment : []);\n    const [searchTerm, setSearchTerm] = useState(\"\");\n    const [expandedCategories, setExpandedCategories] = useState({});\n\n    useEffect(() => {\n        const fetchEquipment = async () => {\n            try {\n                let url = `${API_BASE_URL}/inventory`;\n                \n                // Если указаны даты аренды, используем новый API endpoint для расчета доступности\n                if (startDate && endDate) {\n                    const params = new URLSearchParams({\n                        start_date: startDate,\n                        end_date: endDate,\n                    });\n                    \n                    if (bookingId) {\n                        params.append('exclude_booking_id', bookingId);\n                    }\n                    \n                    url = `${API_BASE_URL}/inventory/available?${params.toString()}`;\n                    console.log(`📅 Используем API с датами: ${url}`);\n                } else {\n                    console.log(`📅 Используем обычный API без дат: ${url}`);\n                }\n\n                const response = await fetch(url);\n                if (!response.ok) {\n                    throw new Error(`Ошибка загрузки: ${response.status}`);\n                }\n                const data = await response.json();\n                // Проверяем, есть ли странные значения\n                const strangeItems = data.filter(item => \n                    item.total > 20 || (item.available !== undefined && item.available > 20)\n                );\n                if (strangeItems.length > 0) {\n                    console.warn(\"⚠️ Найдены элементы с большими значениями:\", strangeItems);\n                }\n                setEquipment(data);\n            } catch (error) {\n                console.error(\"Ошибка загрузки оборудования:\", error);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchEquipment();\n\n        const handleClickOutside = (event) => {\n            if (listRef.current && !listRef.current.contains(event.target)) {\n                onClose();\n            }\n        };\n\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return () => {\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n    }, [onClose, startDate, endDate, bookingId]);\n\n    const updateQuantity = (itemId, newQuantity) => {\n        console.log(`🔢 updateQuantity: itemId=${itemId}, newQuantity=${newQuantity}`);\n        setSelectedItems((prevSelected) =>\n            prevSelected.map((item) => {\n                if (item.id === itemId) {\n                    // Используем available из API, если доступно, иначе fallback на старую логику\n                    const availableQuantity = item.available !== undefined \n                        ? item.available \n                        : item.total - (item.rented || 0);\n                    const finalQuantity = Math.max(1, Math.min(newQuantity || 1, availableQuantity));\n                    console.log(`🔢 item=${item.name}, available=${availableQuantity}, finalQuantity=${finalQuantity}`);\n                    return { ...item, quantity: finalQuantity };\n                }\n                return item;\n            })\n        );\n    };\n\n    const removeItem = (itemId) => {\n        setSelectedItems((prevSelected) => prevSelected.filter((item) => item.id !== itemId));\n    };\n\n    const toggleSelection = (item) => {\n        console.log(`✅ toggleSelection: item=${item.name}, total=${item.total}, available=${item.available}`);\n        setSelectedItems((prevSelected) => {\n            if (!Array.isArray(prevSelected)) prevSelected = [];\n\n            const existingItem = prevSelected.find((selected) => selected.id === item.id);\n            if (existingItem) {\n                console.log(`➖ Удаляем из выбранных: ${item.name}`);\n                return prevSelected.filter((selected) => selected.id !== item.id);\n            } else {\n                console.log(`➕ Добавляем в выбранные: ${item.name} x1`);\n                return [...prevSelected, { ...item, quantity: 1 }];\n            }\n        });\n    };\n\n    const handleConfirm = () => {\n        onSelect(Array.isArray(selectedItems) ? selectedItems : []);\n        onClose();\n    };\n\n    const collator = new Intl.Collator(\"ru\", { numeric: true, sensitivity: \"base\" });\n\n    const groupedEquipment = equipment.reduce((acc, item) => {\n        if (!acc[item.category]) acc[item.category] = [];\n        acc[item.category].push(item);\n        return acc;\n    }, {});\n\n    Object.keys(groupedEquipment).forEach((category) => {\n        groupedEquipment[category].sort((a, b) => collator.compare(a.name, b.name));\n    });\n\n    const toggleCategory = (category) => {\n        setExpandedCategories((prev) => ({\n            ...prev,\n            [category]: !prev[category],\n        }));\n    };\n\n    const filteredEquipment = equipment\n        .filter((item) => item.name.toLowerCase().includes(searchTerm.toLowerCase()))\n        .sort((a, b) => collator.compare(a.name, b.name));\n\n    const isSearching = searchTerm.trim().length > 0;\n\n    return ReactDOM.createPortal(\n        <div className=\"equipment-modal\" ref={listRef}>\n            <div className=\"equipment-modal-content\">\n                <h3>Выберите оборудование</h3>\n\n                {/* Отображение выбранного оборудования в виде блоков */}\n                <div className=\"selected-equipment\">\n                    {selectedItems.map((selectedItem) => (\n                        <div key={selectedItem.id} className=\"selected-item\">\n                            <span className=\"remove-item\" onClick={() => removeItem(selectedItem.id)}>×</span>\n                            <span>{selectedItem.name} ×</span>\n                            <input\n                                type=\"number\"\n                                value={selectedItem.quantity || 1}\n                                onChange={(e) => updateQuantity(selectedItem.id, parseInt(e.target.value) || 1)}\n                                min=\"1\"\n                                max={selectedItem.available !== undefined ? selectedItem.available : \n                                    (typeof selectedItem.total === 'number' ? selectedItem.total : 0) -\n                                    (typeof selectedItem.rented === 'number' ? selectedItem.rented : 0)\n                                }\n                                className=\"selected-quantity\"\n                            />\n                        </div>\n                    ))}\n                </div>\n\n                <input\n                    type=\"text\"\n                    placeholder=\"Поиск...\"\n                    value={searchTerm}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                    className=\"equipment-search\"\n                />\n\n                {loading ? (\n                    <p>Загрузка...</p>\n                ) : (\n                    <div className=\"equipment-list\">\n                        {isSearching ? (\n                            filteredEquipment.map((item) => {\n                                const selectedItem = selectedItems.find((selected) => selected.id === item.id);\n                                // Используем available из API, если доступно, иначе fallback на старую логику\n                                const availableQuantity = item.available !== undefined \n                                    ? item.available \n                                    : item.total - (item.rented || 0);\n                                const isAvailable = availableQuantity > 0;\n\n                                return (\n                                    <li key={item.id} className=\"equipment-item\">\n                                        <label className=\"equipment-label\">\n                                            <input\n                                                type=\"checkbox\"\n                                                checked={!!selectedItem}\n                                                onChange={() => toggleSelection(item)}\n                                                disabled={!isAvailable}\n                                            />\n                                            <span>{item.name}</span>\n                                        </label>\n                                        <div className={`availability ${isAvailable ? \"available\" : \"unavailable\"}`}>\n                                            {isAvailable ? `Доступно: ${availableQuantity}` : \"Нет в наличии\"}\n                                            {item.occupied && item.occupied > 0 && (\n                                                <div className=\"occupied-info\">\n                                                    Занято: {item.occupied} из {item.total}\n                                                </div>\n                                            )}\n                                        </div>\n                                        \n                                    </li>\n                                );\n                            })\n                        ) : (\n                            Object.entries(groupedEquipment).map(([category, items]) => (\n                                <div key={category} className=\"equipment-category\">\n                                    <button className=\"category-toggle\" onClick={() => toggleCategory(category)}>\n                                        {expandedCategories[category] ? \"▼\" : \"▶\"} {category}\n                                    </button>\n                                    {expandedCategories[category] && (\n                                        <ul>\n                                            {items.map((item) => {\n                                                const selectedItem = selectedItems.find((selected) => selected.id === item.id);\n                                                // Используем available из API, если доступно, иначе fallback на старую логику\n                                                const availableQuantity = item.available !== undefined \n                                                    ? item.available \n                                                    : item.total - (item.rented || 0);\n                                                const isAvailable = availableQuantity > 0;\n\n                                                return (\n                                                    <li key={item.id} className=\"equipment-item\">\n                                                        <label className=\"equipment-label\">\n                                                            <input\n                                                                type=\"checkbox\"\n                                                                checked={!!selectedItem}\n                                                                onChange={() => toggleSelection(item)}\n                                                                disabled={!isAvailable}\n                                                            />\n                                                            <span>{item.name}</span>\n                                                        </label>\n                                                        <div className={`availability ${isAvailable ? \"available\" : \"unavailable\"}`}>\n                                                            {isAvailable ? `Доступно: ${availableQuantity}` : \"Нет в наличии\"}\n                                                            {item.occupied && item.occupied > 0 && (\n                                                                <div className=\"occupied-info\">\n                                                                    Занято: {item.occupied} из {item.total}\n                                                                </div>\n                                                            )}\n                                                        \n                                                        </div>\n                                                    </li>\n                                                );\n                                            })}\n                                        </ul>\n                                    )}\n                                </div>\n                            ))\n                        )}\n                    </div>\n                )}\n\n                <div className=\"modal-buttons\">\n                    <button onClick={onClose} className=\"button button-cancel\">Отмена</button>\n                    <button onClick={handleConfirm} className=\"button button-confirm\">Готово</button>\n                </div>\n            </div>\n        </div>,\n        modalRoot\n    );\n};\n\nexport default EquipmentList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}