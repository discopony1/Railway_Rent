{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\discopony\\\\Desktop\\\\MSchool\\\\Notion automation\\\\Railway_Rent\\\\frontend\\\\src\\\\components\\\\Inventory.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InventoryTable = () => {\n  _s();\n  const [inventory, setInventory] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [editingItem, setEditingItem] = useState(null); // Для редактирования\n  const [initialValues, setInitialValues] = useState({}); // Для хранения начальных значений\n  const [updatedData, setUpdatedData] = useState({}); // Для отслеживания обновленных данных\n\n  // Загрузка данных с сервера\n  useEffect(() => {\n    const fetchInventory = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5000/api/inventory\");\n        if (!response.ok) {\n          throw new Error(`Ошибка загрузки: ${response.status}`);\n        }\n        const data = await response.json();\n        setInventory(data);\n      } catch (error) {\n        console.error('Ошибка загрузки инвентаря:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchInventory();\n  }, []);\n\n  // Обработчик изменения данных в таблице\n  const handleInputChange = (e, field, id) => {\n    const value = e.target.value;\n    setInventory(prevInventory => prevInventory.map(item => item.id === id ? {\n      ...item,\n      [field]: value\n    } : item));\n\n    // Логируем изменения для проверки\n    console.log(`Field ${field} for item ${id} updated to:`, value);\n\n    // Обновляем состояние для отслеживания изменений\n    setUpdatedData(prev => ({\n      ...prev,\n      [id]: {\n        ...prev[id],\n        [field]: value\n      }\n    }));\n  };\n\n  // Сохранение начальных значений при редактировании\n  const handleClickEdit = itemId => {\n    setEditingItem(itemId); // Устанавливаем редактируемую строку\n    const item = inventory.find(i => i.id === itemId);\n    if (item) {\n      setInitialValues({\n        ...item\n      });\n    }\n  };\n\n  // Обработчик для сравнения изменений и отправки их на сервер\n  const handleBlur = id => {\n    const updatedItem = inventory.find(item => item.id === id);\n    const initialItem = initialValues;\n\n    // Если данные не изменились, не отправляем их на сервер\n    const changedFields = Object.keys(updatedItem).filter(key => updatedItem[key] !== initialItem[key]);\n    if (changedFields.length > 0) {\n      console.log(\"Sending updated data:\", updatedItem); // Логируем перед отправкой\n      handleSave(id, updatedItem); // Если есть изменения, отправляем на сервер\n    }\n    setEditingItem(null); // Закрытие режима редактирования\n  };\n\n  // Сохранение изменений\n  const handleSave = async (id, updatedItem) => {\n    const updatedDataForAPI = {};\n    let hasChanges = false;\n\n    // Проходим по всем полям и сохраняем их в updatedDataForAPI\n    for (const key in updatedItem) {\n      // Если значение изменилось, добавляем его в обновленные данные\n      if (updatedItem[key] !== initialValues[key]) {\n        updatedDataForAPI[key] = updatedItem[key];\n        hasChanges = true;\n      }\n    }\n\n    // Если изменений нет, не отправляем\n    if (!hasChanges) {\n      console.error('Нет изменений для отправки');\n      return;\n    }\n    try {\n      const response = await fetch(`http://localhost:5000/api/inventory/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updatedDataForAPI) // Отправляем только измененные поля\n      });\n      if (response.ok) {\n        alert(\"Инвентарь обновлен\");\n      } else {\n        alert(\"Ошибка при сохранении изменений\");\n      }\n    } catch (error) {\n      console.error('Ошибка при обновлении инвентаря:', error);\n    }\n  };\n\n  // Отображение строки инвентаря\n  const renderRow = item => {\n    if (editingItem === item.id) {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: item.name,\n            onChange: e => handleInputChange(e, 'name', item.id),\n            onBlur: () => handleBlur(item.id) // Отправка изменений при завершении редактирования\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: item.category,\n            onChange: e => handleInputChange(e, 'category', item.id),\n            onBlur: () => handleBlur(item.id) // Отправка изменений при завершении редактирования\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: item.subcategory,\n            onChange: e => handleInputChange(e, 'subcategory', item.id),\n            onBlur: () => handleBlur(item.id) // Отправка изменений при завершении редактирования\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: item.model,\n            onChange: e => handleInputChange(e, 'model', item.id),\n            onBlur: () => handleBlur(item.id) // Отправка изменений при завершении редактирования\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: item.serial_number,\n            onChange: e => handleInputChange(e, 'serial_number', item.id),\n            onBlur: () => handleBlur(item.id) // Отправка изменений при завершении редактирования\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: item.notes,\n            onChange: e => handleInputChange(e, 'notes', item.id),\n            onBlur: () => handleBlur(item.id) // Отправка изменений при завершении редактирования\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: item.status,\n            onChange: e => handleInputChange(e, 'status', item.id),\n            onBlur: () => handleBlur(item.id) // Отправка изменений при завершении редактирования\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: item.total,\n            onChange: e => handleInputChange(e, 'total', item.id),\n            onBlur: () => handleBlur(item.id) // Отправка изменений при завершении редактирования\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: item.belongs_to,\n            onChange: e => handleInputChange(e, 'belongs_to', item.id),\n            onBlur: () => handleBlur(item.id) // Отправка изменений при завершении редактирования\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSave(item.id),\n            children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setEditingItem(null),\n            children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        onClick: () => handleClickEdit(item.id),\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.subcategory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.model\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.serial_number\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.notes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.total\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.belongs_to\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0418\\u043D\\u0432\\u0435\\u043D\\u0442\\u0430\\u0440\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u041A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u041F\\u043E\\u0434\\u043A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u041C\\u043E\\u0434\\u0435\\u043B\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u0421\\u0435\\u0440\\u0438\\u0439\\u043D\\u044B\\u0439 \\u043D\\u043E\\u043C\\u0435\\u0440\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u041F\\u0440\\u0438\\u043C\\u0435\\u0447\\u0430\\u043D\\u0438\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u041E\\u0431\\u0449\\u0435\\u0435 \\u043A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u041A\\u043E\\u043C\\u0443 \\u043F\\u0440\\u0438\\u043D\\u0430\\u0434\\u043B\\u0435\\u0436\\u0438\\u0442\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u0414\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: inventory.map(renderRow)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 9\n  }, this);\n};\n_s(InventoryTable, \"wpdydRELLP3bFqMG86f0rqB6CRs=\");\n_c = InventoryTable;\nexport default InventoryTable;\nvar _c;\n$RefreshReg$(_c, \"InventoryTable\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","jsxDEV","_jsxDEV","InventoryTable","_s","inventory","setInventory","loading","setLoading","editingItem","setEditingItem","initialValues","setInitialValues","updatedData","setUpdatedData","fetchInventory","response","fetch","ok","Error","status","data","json","error","console","handleInputChange","e","field","id","value","target","prevInventory","map","item","log","prev","handleClickEdit","itemId","find","i","handleBlur","updatedItem","initialItem","changedFields","Object","keys","filter","key","length","handleSave","updatedDataForAPI","hasChanges","method","headers","body","JSON","stringify","alert","renderRow","children","fileName","_jsxFileName","lineNumber","columnNumber","type","name","onChange","onBlur","category","subcategory","model","serial_number","notes","total","belongs_to","onClick","_c","$RefreshReg$"],"sources":["C:/Users/discopony/Desktop/MSchool/Notion automation/Railway_Rent/frontend/src/components/Inventory.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\n\r\nconst InventoryTable = () => {\r\n    const [inventory, setInventory] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [editingItem, setEditingItem] = useState(null); // Для редактирования\r\n    const [initialValues, setInitialValues] = useState({}); // Для хранения начальных значений\r\n    const [updatedData, setUpdatedData] = useState({}); // Для отслеживания обновленных данных\r\n\r\n    // Загрузка данных с сервера\r\n    useEffect(() => {\r\n        const fetchInventory = async () => {\r\n            try {\r\n                const response = await fetch(\"http://localhost:5000/api/inventory\");\r\n                if (!response.ok) {\r\n                    throw new Error(`Ошибка загрузки: ${response.status}`);\r\n                }\r\n                const data = await response.json();\r\n                setInventory(data);\r\n            } catch (error) {\r\n                console.error('Ошибка загрузки инвентаря:', error);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchInventory();\r\n    }, []);\r\n\r\n    // Обработчик изменения данных в таблице\r\n    const handleInputChange = (e, field, id) => {\r\n        const value = e.target.value;\r\n\r\n        setInventory(prevInventory =>\r\n            prevInventory.map(item =>\r\n                item.id === id ? { ...item, [field]: value } : item\r\n            )\r\n        );\r\n\r\n        // Логируем изменения для проверки\r\n        console.log(`Field ${field} for item ${id} updated to:`, value);\r\n\r\n        // Обновляем состояние для отслеживания изменений\r\n        setUpdatedData(prev => ({\r\n            ...prev,\r\n            [id]: {\r\n                ...prev[id],\r\n                [field]: value,\r\n            },\r\n        }));\r\n    };\r\n\r\n    // Сохранение начальных значений при редактировании\r\n    const handleClickEdit = (itemId) => {\r\n        setEditingItem(itemId); // Устанавливаем редактируемую строку\r\n        const item = inventory.find(i => i.id === itemId);\r\n        if (item) {\r\n            setInitialValues({\r\n                ...item,\r\n            });\r\n        }\r\n    };\r\n\r\n    // Обработчик для сравнения изменений и отправки их на сервер\r\n    const handleBlur = (id) => {\r\n        const updatedItem = inventory.find((item) => item.id === id);\r\n        const initialItem = initialValues;\r\n\r\n        // Если данные не изменились, не отправляем их на сервер\r\n        const changedFields = Object.keys(updatedItem).filter(key => updatedItem[key] !== initialItem[key]);\r\n\r\n        if (changedFields.length > 0) {\r\n            console.log(\"Sending updated data:\", updatedItem); // Логируем перед отправкой\r\n            handleSave(id, updatedItem); // Если есть изменения, отправляем на сервер\r\n        }\r\n        setEditingItem(null); // Закрытие режима редактирования\r\n    };\r\n\r\n    // Сохранение изменений\r\n    const handleSave = async (id, updatedItem) => {\r\n        const updatedDataForAPI = {};\r\n        let hasChanges = false;\r\n\r\n        // Проходим по всем полям и сохраняем их в updatedDataForAPI\r\n        for (const key in updatedItem) {\r\n            // Если значение изменилось, добавляем его в обновленные данные\r\n            if (updatedItem[key] !== initialValues[key]) {\r\n                updatedDataForAPI[key] = updatedItem[key];\r\n                hasChanges = true;\r\n            }\r\n        }\r\n\r\n        // Если изменений нет, не отправляем\r\n        if (!hasChanges) {\r\n            console.error('Нет изменений для отправки');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch(`http://localhost:5000/api/inventory/${id}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(updatedDataForAPI), // Отправляем только измененные поля\r\n            });\r\n\r\n            if (response.ok) {\r\n                alert(\"Инвентарь обновлен\");\r\n            } else {\r\n                alert(\"Ошибка при сохранении изменений\");\r\n            }\r\n        } catch (error) {\r\n            console.error('Ошибка при обновлении инвентаря:', error);\r\n        }\r\n    };\r\n\r\n    // Отображение строки инвентаря\r\n    const renderRow = (item) => {\r\n        if (editingItem === item.id) {\r\n            return (\r\n                <tr key={item.id}>\r\n                    <td>{item.id}</td> {/* ID теперь отображаем только для отладки */}\r\n                    <td>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={item.name}\r\n                            onChange={(e) => handleInputChange(e, 'name', item.id)}\r\n                            onBlur={() => handleBlur(item.id)}  // Отправка изменений при завершении редактирования\r\n                        />\r\n                    </td>\r\n                    <td>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={item.category}\r\n                            onChange={(e) => handleInputChange(e, 'category', item.id)}\r\n                            onBlur={() => handleBlur(item.id)}  // Отправка изменений при завершении редактирования\r\n                        />\r\n                    </td>\r\n                    <td>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={item.subcategory}\r\n                            onChange={(e) => handleInputChange(e, 'subcategory', item.id)}\r\n                            onBlur={() => handleBlur(item.id)}  // Отправка изменений при завершении редактирования\r\n                        />\r\n                    </td>\r\n                    <td>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={item.model}\r\n                            onChange={(e) => handleInputChange(e, 'model', item.id)}\r\n                            onBlur={() => handleBlur(item.id)}  // Отправка изменений при завершении редактирования\r\n                        />\r\n                    </td>\r\n                    <td>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={item.serial_number}\r\n                            onChange={(e) => handleInputChange(e, 'serial_number', item.id)}\r\n                            onBlur={() => handleBlur(item.id)}  // Отправка изменений при завершении редактирования\r\n                        />\r\n                    </td>\r\n                    <td>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={item.notes}\r\n                            onChange={(e) => handleInputChange(e, 'notes', item.id)}\r\n                            onBlur={() => handleBlur(item.id)}  // Отправка изменений при завершении редактирования\r\n                        />\r\n                    </td>\r\n                    <td>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={item.status}\r\n                            onChange={(e) => handleInputChange(e, 'status', item.id)}\r\n                            onBlur={() => handleBlur(item.id)}  // Отправка изменений при завершении редактирования\r\n                        />\r\n                    </td>\r\n                    <td>\r\n                        <input\r\n                            type=\"number\"\r\n                            value={item.total}\r\n                            onChange={(e) => handleInputChange(e, 'total', item.id)}\r\n                            onBlur={() => handleBlur(item.id)}  // Отправка изменений при завершении редактирования\r\n                        />\r\n                    </td>\r\n                    <td>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={item.belongs_to}\r\n                            onChange={(e) => handleInputChange(e, 'belongs_to', item.id)}\r\n                            onBlur={() => handleBlur(item.id)}  // Отправка изменений при завершении редактирования\r\n                        />\r\n                    </td>\r\n                    <td>\r\n                        <button onClick={() => handleSave(item.id)}>Сохранить</button>\r\n                        <button onClick={() => setEditingItem(null)}>Отменить</button>\r\n                    </td>\r\n                </tr>\r\n            );\r\n        } else {\r\n            return (\r\n                <tr key={item.id} onClick={() => handleClickEdit(item.id)}>\r\n                    <td>{item.id}</td>\r\n                    <td>{item.name}</td>\r\n                    <td>{item.category}</td>\r\n                    <td>{item.subcategory}</td>\r\n                    <td>{item.model}</td>\r\n                    <td>{item.serial_number}</td>\r\n                    <td>{item.notes}</td>\r\n                    <td>{item.status}</td>\r\n                    <td>{item.total}</td>\r\n                    <td>{item.belongs_to}</td>\r\n                    <td>\r\n                        <button>Редактировать</button>\r\n                    </td>\r\n                </tr>\r\n            );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Инвентарь</h2>\r\n            {loading ? (\r\n                <p>Загрузка...</p>\r\n            ) : (\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>Название</th>\r\n                            <th>Категория</th>\r\n                            <th>Подкатегория</th>\r\n                            <th>Модель</th>\r\n                            <th>Серийный номер</th>\r\n                            <th>Примечания</th>\r\n                            <th>Статус</th>\r\n                            <th>Общее количество</th>\r\n                            <th>Кому принадлежит</th>\r\n                            <th>Действия</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {inventory.map(renderRow)}\r\n                    </tbody>\r\n                </table>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InventoryTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}