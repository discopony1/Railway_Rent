{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\discopony\\\\Desktop\\\\MSchool\\\\Notion automation\\\\Railway_Rent\\\\frontend\\\\src\\\\components\\\\Calendar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Calendar = ({\n  onDateSelect,\n  rowId\n}) => {\n  _s();\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [isOpen, setIsOpen] = useState(false);\n  const handleDateChange = date => {\n    setSelectedDate(date);\n    onDateSelect(rowId, date); // Передаём дату в родительский компонент\n    setIsOpen(false); // Закрываем календарь после выбора\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"date-button\",\n      onClick: () => setIsOpen(!isOpen),\n      children: selectedDate ? selectedDate.toLocaleDateString() : \"Выбрать дату\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-popup\",\n      children: /*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: selectedDate,\n        onChange: handleDateChange,\n        dateFormat: \"dd/MM/yyyy\",\n        inline: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n_s(Calendar, \"I5+pm+Sk7PgDx1P9G7kdBm0fbvs=\");\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","DatePicker","jsxDEV","_jsxDEV","Calendar","onDateSelect","rowId","_s","selectedDate","setSelectedDate","isOpen","setIsOpen","handleDateChange","date","className","children","onClick","toLocaleDateString","fileName","_jsxFileName","lineNumber","columnNumber","selected","onChange","dateFormat","inline","_c","$RefreshReg$"],"sources":["C:/Users/discopony/Desktop/MSchool/Notion automation/Railway_Rent/frontend/src/components/Calendar.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nconst Calendar = ({ onDateSelect, rowId }) => {\r\n    const [selectedDate, setSelectedDate] = useState(null);\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const handleDateChange = (date) => {\r\n        setSelectedDate(date);\r\n        onDateSelect(rowId, date); // Передаём дату в родительский компонент\r\n        setIsOpen(false); // Закрываем календарь после выбора\r\n    };\r\n\r\n    return (\r\n        <div className=\"calendar-container\">\r\n            <button \r\n                className=\"date-button\" \r\n                onClick={() => setIsOpen(!isOpen)}\r\n            >\r\n                {selectedDate ? selectedDate.toLocaleDateString() : \"Выбрать дату\"}\r\n            </button>\r\n\r\n            {isOpen && (\r\n                <div className=\"calendar-popup\">\r\n                    <DatePicker\r\n                        selected={selectedDate}\r\n                        onChange={handleDateChange}\r\n                        dateFormat=\"dd/MM/yyyy\"\r\n                        inline\r\n                    />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Calendar;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,kBAAkB;AACzC,OAAO,4CAA4C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,YAAY;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMY,gBAAgB,GAAIC,IAAI,IAAK;IAC/BJ,eAAe,CAACI,IAAI,CAAC;IACrBR,YAAY,CAACC,KAAK,EAAEO,IAAI,CAAC,CAAC,CAAC;IAC3BF,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;EACtB,CAAC;EAED,oBACIR,OAAA;IAAKW,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBAC/BZ,OAAA;MACIW,SAAS,EAAC,aAAa;MACvBE,OAAO,EAAEA,CAAA,KAAML,SAAS,CAAC,CAACD,MAAM,CAAE;MAAAK,QAAA,EAEjCP,YAAY,GAAGA,YAAY,CAACS,kBAAkB,CAAC,CAAC,GAAG;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9D,CAAC,EAERX,MAAM,iBACHP,OAAA;MAAKW,SAAS,EAAC,gBAAgB;MAAAC,QAAA,eAC3BZ,OAAA,CAACF,UAAU;QACPqB,QAAQ,EAAEd,YAAa;QACvBe,QAAQ,EAAEX,gBAAiB;QAC3BY,UAAU,EAAC,YAAY;QACvBC,MAAM;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACd,EAAA,CA/BIH,QAAQ;AAAAsB,EAAA,GAARtB,QAAQ;AAiCd,eAAeA,QAAQ;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}