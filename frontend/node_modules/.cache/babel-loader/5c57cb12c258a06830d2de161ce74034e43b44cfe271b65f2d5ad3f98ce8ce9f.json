{"ast":null,"code":"export async function updateEquipment(rowIndex, selectedEquipment, rentals, setRentals) {\n  try {\n    // 1️⃣ Запрашиваем актуальные данные об оборудовании\n    const response = await fetch(\"/api/inventory\");\n    if (!response.ok) throw new Error(\"Ошибка загрузки инвентаря\");\n    const equipmentList = await response.json();\n\n    // 2️⃣ Проверяем доступность выбранного оборудования\n    const unavailableItems = selectedEquipment.filter(item => !equipmentList.some(eq => eq.name === item && eq.available > 0));\n    if (unavailableItems.length > 0) {\n      alert(`Следующее оборудование уже занято: ${unavailableItems.join(\", \")}`);\n      return;\n    }\n\n    // 3️⃣ Обновляем данные аренды в базе\n    const rentalUpdate = {\n      id: rentals[rowIndex].id,\n      equipment: selectedEquipment\n    };\n    const updateResponse = await fetch(\"/api/update_rental\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(rentalUpdate)\n    });\n    if (!updateResponse.ok) throw new Error(\"Ошибка обновления аренды\");\n\n    // 4️⃣ Обновляем состояние в React\n    const newRentals = [...rentals];\n    newRentals[rowIndex].equipment = selectedEquipment;\n    setRentals(newRentals);\n  } catch (error) {\n    console.error(\"Ошибка обновления оборудования:\", error);\n  }\n}","map":{"version":3,"names":["updateEquipment","rowIndex","selectedEquipment","rentals","setRentals","response","fetch","ok","Error","equipmentList","json","unavailableItems","filter","item","some","eq","name","available","length","alert","join","rentalUpdate","id","equipment","updateResponse","method","headers","body","JSON","stringify","newRentals","error","console"],"sources":["C:/Users/discopony/Desktop/MSchool/Notion automation/Railway_Rent/frontend/src/components/updateEquipment.js"],"sourcesContent":["export async function updateEquipment(rowIndex, selectedEquipment, rentals, setRentals) {\r\n    try {\r\n      // 1️⃣ Запрашиваем актуальные данные об оборудовании\r\n      const response = await fetch(\"/api/inventory\");\r\n      if (!response.ok) throw new Error(\"Ошибка загрузки инвентаря\");\r\n  \r\n      const equipmentList = await response.json();\r\n  \r\n      // 2️⃣ Проверяем доступность выбранного оборудования\r\n      const unavailableItems = selectedEquipment.filter(\r\n        (item) => !equipmentList.some((eq) => eq.name === item && eq.available > 0)\r\n      );\r\n  \r\n      if (unavailableItems.length > 0) {\r\n        alert(`Следующее оборудование уже занято: ${unavailableItems.join(\", \")}`);\r\n        return;\r\n      }\r\n  \r\n      // 3️⃣ Обновляем данные аренды в базе\r\n      const rentalUpdate = {\r\n        id: rentals[rowIndex].id,\r\n        equipment: selectedEquipment,\r\n      };\r\n  \r\n      const updateResponse = await fetch(\"/api/update_rental\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(rentalUpdate),\r\n      });\r\n  \r\n      if (!updateResponse.ok) throw new Error(\"Ошибка обновления аренды\");\r\n  \r\n      // 4️⃣ Обновляем состояние в React\r\n      const newRentals = [...rentals];\r\n      newRentals[rowIndex].equipment = selectedEquipment;\r\n      setRentals(newRentals);\r\n    } catch (error) {\r\n      console.error(\"Ошибка обновления оборудования:\", error);\r\n    }\r\n  }\r\n  "],"mappings":"AAAA,OAAO,eAAeA,eAAeA,CAACC,QAAQ,EAAEC,iBAAiB,EAAEC,OAAO,EAAEC,UAAU,EAAE;EACpF,IAAI;IACF;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gBAAgB,CAAC;IAC9C,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;IAE9D,MAAMC,aAAa,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;;IAE3C;IACA,MAAMC,gBAAgB,GAAGT,iBAAiB,CAACU,MAAM,CAC9CC,IAAI,IAAK,CAACJ,aAAa,CAACK,IAAI,CAAEC,EAAE,IAAKA,EAAE,CAACC,IAAI,KAAKH,IAAI,IAAIE,EAAE,CAACE,SAAS,GAAG,CAAC,CAC5E,CAAC;IAED,IAAIN,gBAAgB,CAACO,MAAM,GAAG,CAAC,EAAE;MAC/BC,KAAK,CAAC,sCAAsCR,gBAAgB,CAACS,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;MAC1E;IACF;;IAEA;IACA,MAAMC,YAAY,GAAG;MACnBC,EAAE,EAAEnB,OAAO,CAACF,QAAQ,CAAC,CAACqB,EAAE;MACxBC,SAAS,EAAErB;IACb,CAAC;IAED,MAAMsB,cAAc,GAAG,MAAMlB,KAAK,CAAC,oBAAoB,EAAE;MACvDmB,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,YAAY;IACnC,CAAC,CAAC;IAEF,IAAI,CAACG,cAAc,CAACjB,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;;IAEnE;IACA,MAAMsB,UAAU,GAAG,CAAC,GAAG3B,OAAO,CAAC;IAC/B2B,UAAU,CAAC7B,QAAQ,CAAC,CAACsB,SAAS,GAAGrB,iBAAiB;IAClDE,UAAU,CAAC0B,UAAU,CAAC;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;EACzD;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}