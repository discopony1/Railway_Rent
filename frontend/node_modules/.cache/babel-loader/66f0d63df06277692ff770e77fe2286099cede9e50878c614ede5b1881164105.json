{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\discopony\\\\Desktop\\\\MSchool\\\\Notion automation\\\\Railway_Rent\\\\frontend\\\\src\\\\components\\\\EquipmentList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport API_BASE_URL from \"../config\";\nimport \"./EquipmentList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst modalRoot = document.getElementById(\"modal-root\") || (() => {\n  const el = document.createElement(\"div\");\n  el.id = \"modal-root\";\n  document.body.appendChild(el);\n  return el;\n})();\nconst Spinner = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"spinner\",\n  children: /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"spinner-circle\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 14,\n  columnNumber: 5\n}, this);\n_c = Spinner;\nconst EquipmentList = ({\n  onSelect,\n  onClose,\n  selectedEquipment,\n  startDate,\n  endDate\n}) => {\n  _s();\n  const listRef = useRef(null);\n  const [equipment, setEquipment] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedItems, setSelectedItems] = useState(Array.isArray(selectedEquipment) ? selectedEquipment : []);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [expandedCategories, setExpandedCategories] = useState({});\n  useEffect(() => {\n    const fetchEquipment = async () => {\n      setLoading(true); // Начинаем загрузку\n      try {\n        const params = new URLSearchParams();\n        if (startDate) params.append(\"start_date\", startDate);\n        if (endDate) params.append(\"end_date\", endDate);\n        const response = await fetch(`${API_BASE_URL}/inventory?${params.toString()}`);\n        if (!response.ok) {\n          throw new Error(`Ошибка загрузки: ${response.status}`);\n        }\n        const data = await response.json();\n        setEquipment(data);\n      } catch (error) {\n        console.error(\"Ошибка загрузки оборудования:\", error);\n      } finally {\n        setLoading(false); // Заканчиваем загрузку\n      }\n    };\n    fetchEquipment();\n    const handleClickOutside = event => {\n      if (listRef.current && !listRef.current.contains(event.target)) {\n        onClose();\n      }\n    };\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [onClose]);\n  const updateQuantity = (itemId, newQuantity) => {\n    setSelectedItems(prevSelected => prevSelected.map(item => {\n      if (item.id === itemId) {\n        const availableQuantity = item.total - (item.rented || 0);\n        return {\n          ...item,\n          quantity: Math.max(1, Math.min(newQuantity || 1, availableQuantity))\n        };\n      }\n      return item;\n    }));\n  };\n  const removeItem = itemId => {\n    setSelectedItems(prevSelected => prevSelected.filter(item => item.id !== itemId));\n  };\n  const toggleSelection = item => {\n    setSelectedItems(prevSelected => {\n      if (!Array.isArray(prevSelected)) prevSelected = [];\n      const existingItem = prevSelected.find(selected => selected.id === item.id);\n      if (existingItem) {\n        return prevSelected.filter(selected => selected.id !== item.id);\n      } else {\n        return [...prevSelected, {\n          ...item,\n          quantity: 1\n        }];\n      }\n    });\n  };\n  const handleConfirm = () => {\n    onSelect(Array.isArray(selectedItems) ? selectedItems : []);\n    onClose();\n  };\n  const collator = new Intl.Collator(\"ru\", {\n    numeric: true,\n    sensitivity: \"base\"\n  });\n  const groupedEquipment = equipment.reduce((acc, item) => {\n    if (!acc[item.category]) acc[item.category] = [];\n    acc[item.category].push(item);\n    return acc;\n  }, {});\n  Object.keys(groupedEquipment).forEach(category => {\n    groupedEquipment[category].sort((a, b) => collator.compare(a.name, b.name));\n  });\n  const toggleCategory = category => {\n    setExpandedCategories(prev => ({\n      ...prev,\n      [category]: !prev[category]\n    }));\n  };\n  const filteredEquipment = equipment.filter(item => item.name.toLowerCase().includes(searchTerm.toLowerCase())).sort((a, b) => collator.compare(a.name, b.name));\n  const isSearching = searchTerm.trim().length > 0;\n  return /*#__PURE__*/ReactDOM.createPortal(/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"equipment-modal\",\n    ref: listRef,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"equipment-modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043E\\u0431\\u043E\\u0440\\u0443\\u0434\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected-equipment\",\n        children: selectedItems.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selected-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"remove-item\",\n            onClick: () => removeItem(item.id),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [item.name, \" \\xD7\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: item.quantity,\n            onChange: e => updateQuantity(item.id, parseInt(e.target.value) || 1),\n            min: \"1\",\n            max: item.total - (item.rented || 0),\n            className: \"selected-quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 29\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\u041F\\u043E\\u0438\\u0441\\u043A...\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value),\n        className: \"equipment-search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 21\n      }, this) // Показать спиннер при загрузке\n      : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"equipment-list\",\n        children: isSearching ? filteredEquipment.map(item => {\n          const selectedItem = selectedItems.find(selected => selected.id === item.id);\n          const isAvailable = item.total - (item.rented || 0) > 0;\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"equipment-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"equipment-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: !!selectedItem,\n                onChange: () => toggleSelection(item)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `availability ${isAvailable ? \"available\" : \"unavailable\"}`,\n              children: isAvailable ? `Доступно: ${item.total - (item.rented || 0)}` : \"Нет в наличии\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 41\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 37\n          }, this);\n        }) : Object.entries(groupedEquipment).map(([category, items]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"equipment-category\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"category-toggle\",\n            onClick: () => toggleCategory(category),\n            children: [expandedCategories[category] ? \"▼\" : \"▶\", \" \", category]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 37\n          }, this), expandedCategories[category] && /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: items.map(item => {\n              const selectedItem = selectedItems.find(selected => selected.id === item.id);\n              const isAvailable = item.total - (item.rented || 0) > 0;\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"equipment-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"equipment-label\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    checked: !!selectedItem,\n                    onChange: () => toggleSelection(item)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 192,\n                    columnNumber: 61\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: item.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 197,\n                    columnNumber: 61\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 57\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `availability ${isAvailable ? \"available\" : \"unavailable\"}`,\n                  children: isAvailable ? `Доступно: ${item.total - (item.rented || 0)}` : \"Нет в наличии\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 57\n                }, this)]\n              }, item.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 53\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 41\n          }, this)]\n        }, category, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          className: \"button button-cancel\",\n          children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleConfirm,\n          className: \"button button-confirm\",\n          children: \"\\u0413\\u043E\\u0442\\u043E\\u0432\\u043E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 9\n  }, this), modalRoot);\n};\n_s(EquipmentList, \"nZS8KQzxOQrlQBUkz8+BSg1bnlk=\");\n_c2 = EquipmentList;\nexport default EquipmentList;\nvar _c, _c2;\n$RefreshReg$(_c, \"Spinner\");\n$RefreshReg$(_c2, \"EquipmentList\");","map":{"version":3,"names":["React","useState","useEffect","useRef","ReactDOM","API_BASE_URL","jsxDEV","_jsxDEV","modalRoot","document","getElementById","el","createElement","id","body","appendChild","Spinner","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","EquipmentList","onSelect","onClose","selectedEquipment","startDate","endDate","_s","listRef","equipment","setEquipment","loading","setLoading","selectedItems","setSelectedItems","Array","isArray","searchTerm","setSearchTerm","expandedCategories","setExpandedCategories","fetchEquipment","params","URLSearchParams","append","response","fetch","toString","ok","Error","status","data","json","error","console","handleClickOutside","event","current","contains","target","addEventListener","removeEventListener","updateQuantity","itemId","newQuantity","prevSelected","map","item","availableQuantity","total","rented","quantity","Math","max","min","removeItem","filter","toggleSelection","existingItem","find","selected","handleConfirm","collator","Intl","Collator","numeric","sensitivity","groupedEquipment","reduce","acc","category","push","Object","keys","forEach","sort","a","b","compare","name","toggleCategory","prev","filteredEquipment","toLowerCase","includes","isSearching","trim","length","createPortal","ref","onClick","type","value","onChange","e","parseInt","placeholder","selectedItem","isAvailable","checked","entries","items","_c2","$RefreshReg$"],"sources":["C:/Users/discopony/Desktop/MSchool/Notion automation/Railway_Rent/frontend/src/components/EquipmentList.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport API_BASE_URL from \"../config\";\r\nimport \"./EquipmentList.css\";\r\n\r\nconst modalRoot = document.getElementById(\"modal-root\") || (() => {\r\n    const el = document.createElement(\"div\");\r\n    el.id = \"modal-root\";\r\n    document.body.appendChild(el);\r\n    return el;\r\n})();\r\n\r\nconst Spinner = () => (\r\n    <div className=\"spinner\">\r\n        <div className=\"spinner-circle\"></div>\r\n    </div>\r\n);\r\n\r\nconst EquipmentList = ({ onSelect, onClose, selectedEquipment, startDate, endDate }) => { \r\n    const listRef = useRef(null);\r\n    const [equipment, setEquipment] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [selectedItems, setSelectedItems] = useState(Array.isArray(selectedEquipment) ? selectedEquipment : []);\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n    const [expandedCategories, setExpandedCategories] = useState({});\r\n\r\n    useEffect(() => {\r\n        const fetchEquipment = async () => {\r\n            setLoading(true); // Начинаем загрузку\r\n            try {\r\n                const params = new URLSearchParams();\r\n                if (startDate) params.append(\"start_date\", startDate);\r\n                if (endDate) params.append(\"end_date\", endDate);\r\n\r\n                const response = await fetch(`${API_BASE_URL}/inventory?${params.toString()}`);\r\n                if (!response.ok) {\r\n                    throw new Error(`Ошибка загрузки: ${response.status}`);\r\n                }\r\n                const data = await response.json();\r\n                setEquipment(data);\r\n            } catch (error) {\r\n                console.error(\"Ошибка загрузки оборудования:\", error);\r\n            } finally {\r\n                setLoading(false); // Заканчиваем загрузку\r\n            }\r\n        };\r\n    \r\n        fetchEquipment();\r\n\r\n        const handleClickOutside = (event) => {\r\n            if (listRef.current && !listRef.current.contains(event.target)) {\r\n                onClose();\r\n            }\r\n        };\r\n\r\n        document.addEventListener(\"mousedown\", handleClickOutside);\r\n        return () => {\r\n            document.removeEventListener(\"mousedown\", handleClickOutside);\r\n        };\r\n    }, [onClose]);\r\n\r\n    const updateQuantity = (itemId, newQuantity) => {\r\n        setSelectedItems((prevSelected) =>\r\n            prevSelected.map((item) => {\r\n                if (item.id === itemId) {\r\n                    const availableQuantity = item.total - (item.rented || 0);\r\n                    return { ...item, quantity: Math.max(1, Math.min(newQuantity || 1, availableQuantity)) };\r\n                }\r\n                return item;\r\n            })\r\n        );\r\n    };\r\n\r\n    const removeItem = (itemId) => {\r\n        setSelectedItems((prevSelected) => prevSelected.filter((item) => item.id !== itemId));\r\n    };\r\n\r\n    const toggleSelection = (item) => {\r\n        setSelectedItems((prevSelected) => {\r\n            if (!Array.isArray(prevSelected)) prevSelected = [];\r\n\r\n            const existingItem = prevSelected.find((selected) => selected.id === item.id);\r\n            if (existingItem) {\r\n                return prevSelected.filter((selected) => selected.id !== item.id);\r\n            } else {\r\n                return [...prevSelected, { ...item, quantity: 1 }];\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleConfirm = () => {\r\n        onSelect(Array.isArray(selectedItems) ? selectedItems : []);\r\n        onClose();\r\n    };\r\n\r\n    const collator = new Intl.Collator(\"ru\", { numeric: true, sensitivity: \"base\" });\r\n\r\n    const groupedEquipment = equipment.reduce((acc, item) => {\r\n        if (!acc[item.category]) acc[item.category] = [];\r\n        acc[item.category].push(item);\r\n        return acc;\r\n    }, {});\r\n\r\n    Object.keys(groupedEquipment).forEach((category) => {\r\n        groupedEquipment[category].sort((a, b) => collator.compare(a.name, b.name));\r\n    });\r\n\r\n    const toggleCategory = (category) => {\r\n        setExpandedCategories((prev) => ({\r\n            ...prev,\r\n            [category]: !prev[category],\r\n        }));\r\n    };\r\n\r\n    const filteredEquipment = equipment\r\n        .filter((item) => item.name.toLowerCase().includes(searchTerm.toLowerCase()))\r\n        .sort((a, b) => collator.compare(a.name, b.name));\r\n\r\n    const isSearching = searchTerm.trim().length > 0;\r\n\r\n    return ReactDOM.createPortal(\r\n        <div className=\"equipment-modal\" ref={listRef}>\r\n            <div className=\"equipment-modal-content\">\r\n                <h3>Выберите оборудование</h3>\r\n\r\n                {/* Отображение выбранного оборудования в виде блоков */}\r\n                <div className=\"selected-equipment\">\r\n                    {selectedItems.map((item) => (\r\n                        <div key={item.id} className=\"selected-item\">\r\n                            <span className=\"remove-item\" onClick={() => removeItem(item.id)}>×</span>\r\n                            <span>{item.name} ×</span>\r\n                            <input\r\n                                type=\"number\"\r\n                                value={item.quantity}\r\n                                onChange={(e) => updateQuantity(item.id, parseInt(e.target.value) || 1)}\r\n                                min=\"1\"\r\n                                max={item.total - (item.rented || 0)}\r\n                                className=\"selected-quantity\"\r\n                            />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Поиск...\"\r\n                    value={searchTerm}\r\n                    onChange={(e) => setSearchTerm(e.target.value)}\r\n                    className=\"equipment-search\"\r\n                />\r\n\r\n                {loading ? (\r\n                    <Spinner /> // Показать спиннер при загрузке\r\n                ) : (\r\n                    <div className=\"equipment-list\">\r\n                        {isSearching ? (\r\n                            filteredEquipment.map((item) => {\r\n                                const selectedItem = selectedItems.find((selected) => selected.id === item.id);\r\n                                const isAvailable = (item.total - (item.rented || 0)) > 0;\r\n\r\n                                return (\r\n                                    <li key={item.id} className=\"equipment-item\">\r\n                                        <label className=\"equipment-label\">\r\n                                            <input\r\n                                                type=\"checkbox\"\r\n                                                checked={!!selectedItem}\r\n                                                onChange={() => toggleSelection(item)}\r\n                                            />\r\n                                            <span>{item.name}</span>\r\n                                        </label>\r\n                                        <div className={`availability ${isAvailable ? \"available\" : \"unavailable\"}`}>\r\n                                            {isAvailable ? `Доступно: ${item.total - (item.rented || 0)}` : \"Нет в наличии\"}\r\n                                        </div>\r\n                                    </li>\r\n                                );\r\n                            })\r\n                        ) : (\r\n                            Object.entries(groupedEquipment).map(([category, items]) => (\r\n                                <div key={category} className=\"equipment-category\">\r\n                                    <button className=\"category-toggle\" onClick={() => toggleCategory(category)}>\r\n                                        {expandedCategories[category] ? \"▼\" : \"▶\"} {category}\r\n                                    </button>\r\n                                    {expandedCategories[category] && (\r\n                                        <ul>\r\n                                            {items.map((item) => {\r\n                                                const selectedItem = selectedItems.find((selected) => selected.id === item.id);\r\n                                                const isAvailable = (item.total - (item.rented || 0)) > 0;\r\n\r\n                                                return (\r\n                                                    <li key={item.id} className=\"equipment-item\">\r\n                                                        <label className=\"equipment-label\">\r\n                                                            <input\r\n                                                                type=\"checkbox\"\r\n                                                                checked={!!selectedItem}\r\n                                                                onChange={() => toggleSelection(item)}\r\n                                                            />\r\n                                                            <span>{item.name}</span>\r\n                                                        </label>\r\n                                                        <div className={`availability ${isAvailable ? \"available\" : \"unavailable\"}`}>\r\n                                                            {isAvailable ? `Доступно: ${item.total - (item.rented || 0)}` : \"Нет в наличии\"}\r\n                                                        </div>\r\n                                                    </li>\r\n                                                );\r\n                                            })}\r\n                                        </ul>\r\n                                    )}\r\n                                </div>\r\n                            ))\r\n                        )}\r\n                    </div>\r\n                )}\r\n\r\n                <div className=\"modal-buttons\">\r\n                    <button onClick={onClose} className=\"button button-cancel\">Отмена</button>\r\n                    <button onClick={handleConfirm} className=\"button button-confirm\">Готово</button>\r\n                </div>\r\n            </div>\r\n        </div>,\r\n        modalRoot\r\n    );\r\n};\r\n\r\nexport default EquipmentList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}