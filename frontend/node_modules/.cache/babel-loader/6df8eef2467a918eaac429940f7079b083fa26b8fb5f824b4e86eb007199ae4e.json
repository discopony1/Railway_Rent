{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\discopony\\\\Desktop\\\\MSchool\\\\Notion automation\\\\Railway_Rent\\\\frontend\\\\src\\\\components\\\\DebugToggle.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DebugToggle({\n  onToggle\n}) {\n  _s();\n  const [debugMode, setDebugMode] = useState(() => {\n    return JSON.parse(localStorage.getItem(\"debugMode\")) || false;\n  });\n\n  // Save debug mode status in localStorage\n  useEffect(() => {\n    onToggle(debugMode);\n    if (debugMode) {\n      addColumnResizing(); // Enable column resizing if debug mode is on\n    } else {\n      resetColumnResizing(); // Disable column resizing if debug mode is off\n    }\n  }, [debugMode, onToggle]);\n\n  // Function to toggle debug mode\n  const toggleDebug = () => {\n    setDebugMode(prevMode => {\n      const newDebugMode = !prevMode;\n      localStorage.setItem(\"debugMode\", JSON.stringify(newDebugMode));\n      return newDebugMode;\n    });\n  };\n\n  // Column resizing logic\n  const addColumnResizing = () => {\n    const columns = document.querySelectorAll('.rental-table th');\n    columns.forEach((col, index) => {\n      const resizer = document.createElement('div');\n      resizer.classList.add('resizer');\n      col.appendChild(resizer);\n\n      // Apply saved widths if available\n      const savedWidth = localStorage.getItem(`column-${index}-width`);\n      if (savedWidth) {\n        col.style.width = savedWidth;\n      }\n      resizer.addEventListener('mousedown', e => {\n        const startX = e.clientX;\n        const startWidth = col.offsetWidth;\n        const onMouseMove = moveEvent => {\n          const newWidth = startWidth + (moveEvent.clientX - startX);\n          col.style.width = `${newWidth}px`;\n        };\n        const onMouseUp = () => {\n          // Save column width to localStorage\n          localStorage.setItem(`column-${index}-width`, col.style.width);\n          window.removeEventListener('mousemove', onMouseMove);\n          window.removeEventListener('mouseup', onMouseUp);\n        };\n        window.addEventListener('mousemove', onMouseMove);\n        window.addEventListener('mouseup', onMouseUp);\n      });\n    });\n  };\n\n  // Reset the resizing logic by removing resizer elements\n  const resetColumnResizing = () => {\n    const columns = document.querySelectorAll('.rental-table th');\n    columns.forEach(col => {\n      const resizer = col.querySelector('.resizer');\n      if (resizer) {\n        resizer.remove(); // Remove the resizer div\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: toggleDebug,\n    style: {\n      marginBottom: \"10px\",\n      padding: \"8px 16px\",\n      backgroundColor: debugMode ? \"#007bff\" : \"#f44336\",\n      color: \"white\",\n      border: \"none\",\n      borderRadius: \"6px\",\n      cursor: \"pointer\"\n    },\n    children: debugMode ? \"üîß Debug ON\" : \"‚öôÔ∏è Debug OFF\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(DebugToggle, \"t1W46un/wyqy+sxNvpeoeQHd9M4=\");\n_c = DebugToggle;\nexport default DebugToggle;\nvar _c;\n$RefreshReg$(_c, \"DebugToggle\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","DebugToggle","onToggle","_s","debugMode","setDebugMode","JSON","parse","localStorage","getItem","addColumnResizing","resetColumnResizing","toggleDebug","prevMode","newDebugMode","setItem","stringify","columns","document","querySelectorAll","forEach","col","index","resizer","createElement","classList","add","appendChild","savedWidth","style","width","addEventListener","e","startX","clientX","startWidth","offsetWidth","onMouseMove","moveEvent","newWidth","onMouseUp","window","removeEventListener","querySelector","remove","onClick","marginBottom","padding","backgroundColor","color","border","borderRadius","cursor","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["c:/Users/discopony/Desktop/MSchool/Notion automation/Railway_Rent/frontend/src/components/DebugToggle.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nfunction DebugToggle({ onToggle }) {\r\n  const [debugMode, setDebugMode] = useState(() => {\r\n    return JSON.parse(localStorage.getItem(\"debugMode\")) || false;\r\n  });\r\n\r\n  // Save debug mode status in localStorage\r\n  useEffect(() => {\r\n    onToggle(debugMode);\r\n    if (debugMode) {\r\n      addColumnResizing();  // Enable column resizing if debug mode is on\r\n    } else {\r\n      resetColumnResizing();  // Disable column resizing if debug mode is off\r\n    }\r\n  }, [debugMode, onToggle]);\r\n\r\n  // Function to toggle debug mode\r\n  const toggleDebug = () => {\r\n    setDebugMode((prevMode) => {\r\n      const newDebugMode = !prevMode;\r\n      localStorage.setItem(\"debugMode\", JSON.stringify(newDebugMode));\r\n      return newDebugMode;\r\n    });\r\n  };\r\n\r\n  // Column resizing logic\r\n  const addColumnResizing = () => {\r\n    const columns = document.querySelectorAll('.rental-table th');\r\n    columns.forEach((col, index) => {\r\n      const resizer = document.createElement('div');\r\n      resizer.classList.add('resizer');\r\n      col.appendChild(resizer);\r\n\r\n      // Apply saved widths if available\r\n      const savedWidth = localStorage.getItem(`column-${index}-width`);\r\n      if (savedWidth) {\r\n        col.style.width = savedWidth;\r\n      }\r\n\r\n      resizer.addEventListener('mousedown', (e) => {\r\n        const startX = e.clientX;\r\n        const startWidth = col.offsetWidth;\r\n\r\n        const onMouseMove = (moveEvent) => {\r\n          const newWidth = startWidth + (moveEvent.clientX - startX);\r\n          col.style.width = `${newWidth}px`;\r\n        };\r\n\r\n        const onMouseUp = () => {\r\n          // Save column width to localStorage\r\n          localStorage.setItem(`column-${index}-width`, col.style.width);\r\n\r\n          window.removeEventListener('mousemove', onMouseMove);\r\n          window.removeEventListener('mouseup', onMouseUp);\r\n        };\r\n\r\n        window.addEventListener('mousemove', onMouseMove);\r\n        window.addEventListener('mouseup', onMouseUp);\r\n      });\r\n    });\r\n  };\r\n\r\n  // Reset the resizing logic by removing resizer elements\r\n  const resetColumnResizing = () => {\r\n    const columns = document.querySelectorAll('.rental-table th');\r\n    columns.forEach((col) => {\r\n      const resizer = col.querySelector('.resizer');\r\n      if (resizer) {\r\n        resizer.remove(); // Remove the resizer div\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <button \r\n      onClick={toggleDebug} \r\n      style={{ \r\n        marginBottom: \"10px\", \r\n        padding: \"8px 16px\", \r\n        backgroundColor: debugMode ? \"#007bff\" : \"#f44336\", \r\n        color: \"white\", \r\n        border: \"none\", \r\n        borderRadius: \"6px\", \r\n        cursor: \"pointer\" \r\n      }}\r\n    >\r\n      {debugMode ? \"üîß Debug ON\" : \"‚öôÔ∏è Debug OFF\"}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default DebugToggle;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}