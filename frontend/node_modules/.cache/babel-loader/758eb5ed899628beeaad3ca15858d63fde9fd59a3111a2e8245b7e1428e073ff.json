{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\discopony\\\\Desktop\\\\MSchool\\\\Notion automation\\\\Railway_Rent\\\\frontend\\\\src\\\\components\\\\EquipmentList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport ReactDOM from 'react-dom';\nimport API_BASE_URL from \"../config\";\nimport './EquipmentList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EquipmentList = ({\n  onSelect,\n  onClose,\n  selectedEquipment\n}) => {\n  _s();\n  const listRef = useRef(null);\n  const [equipment, setEquipment] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedItems, setSelectedItems] = useState(Array.isArray(selectedEquipment) ? selectedEquipment : []);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const modalRoot = useRef(document.createElement('div'));\n  useEffect(() => {\n    modalRoot.current.id = 'modal-root';\n    document.body.appendChild(modalRoot.current);\n    return () => {\n      document.body.removeChild(modalRoot.current);\n    };\n  }, []);\n  useEffect(() => {\n    const fetchEquipment = async () => {\n      try {\n        const response = await fetch(`${API_BASE_URL}/inventory`);\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        console.log(\"Полученные данные:\", data);\n\n        // Преобразуем данные, вычисляя fact как total - rented\n        const processedData = data.map(item => ({\n          ...item,\n          fact: item.total - (item.rented || 0)\n        }));\n        setEquipment(processedData);\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Ошибка загрузки оборудования:\", error);\n        setLoading(false);\n      }\n    };\n    fetchEquipment();\n    const handleClickOutside = event => {\n      if (listRef.current && !listRef.current.contains(event.target)) {\n        onClose();\n      }\n    };\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [onClose]);\n  const toggleSelection = item => {\n    setSelectedItems(prevSelected => {\n      if (!Array.isArray(prevSelected)) prevSelected = [];\n      const existingItem = prevSelected.find(selected => selected.id === item.id);\n      if (existingItem) {\n        return prevSelected.filter(selected => selected.id !== item.id);\n      } else {\n        // Используем вычисленное значение fact для максимального количества\n        const maxQuantity = Math.max(0, item.total - (item.rented || 0));\n        const quantity = Math.min(1, maxQuantity);\n        return [...prevSelected, {\n          ...item,\n          quantity\n        }];\n      }\n    });\n  };\n  const updateQuantity = (itemId, newQuantity, maxAvailable) => {\n    if (!Array.isArray(selectedItems)) return;\n    const item = equipment.find(eq => eq.id === itemId);\n    if (!item) return;\n\n    // Используем вычисленное значение fact для максимального количества\n    const maxQuantity = Math.max(0, item.total - (item.rented || 0));\n    const quantity = Math.min(Math.max(1, newQuantity), maxQuantity);\n    setSelectedItems(selectedItems.map(item => item.id === itemId ? {\n      ...item,\n      quantity\n    } : item));\n  };\n  const handleConfirm = () => {\n    onSelect(Array.isArray(selectedItems) ? selectedItems : []);\n    onClose();\n  };\n  const filteredEquipment = equipment.filter(item => item.name.toLowerCase().includes(searchTerm.toLowerCase()));\n  return /*#__PURE__*/ReactDOM.createPortal(/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"equipment-modal\",\n    ref: listRef,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"equipment-modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043E\\u0431\\u043E\\u0440\\u0443\\u0434\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\u041F\\u043E\\u0438\\u0441\\u043A...\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value),\n        className: \"equipment-search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"equipment-list\",\n        children: filteredEquipment.map(item => {\n          const selectedItem = selectedItems.find(selected => selected.id === item.id);\n          // Вычисляем доступное количество как total - rented\n          const availableQuantity = Math.max(0, item.total - (item.rented || 0));\n          const isAvailable = availableQuantity > 0;\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"equipment-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"equipment-controls\",\n              children: [selectedItem && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"quantity-control\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: e => {\n                    e.stopPropagation();\n                    updateQuantity(item.id, selectedItem.quantity - 1, availableQuantity);\n                  },\n                  className: \"quantity-button\",\n                  disabled: selectedItem.quantity <= 1,\n                  children: \"-\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  value: selectedItem.quantity,\n                  onChange: e => updateQuantity(item.id, parseInt(e.target.value) || 1, availableQuantity),\n                  className: \"quantity-input\",\n                  min: \"1\",\n                  max: availableQuantity\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: e => {\n                    e.stopPropagation();\n                    updateQuantity(item.id, selectedItem.quantity + 1, availableQuantity);\n                  },\n                  className: \"quantity-button\",\n                  disabled: selectedItem.quantity >= availableQuantity,\n                  children: \"+\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"equipment-label\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: !!selectedItem,\n                  onChange: () => toggleSelection(item),\n                  disabled: !isAvailable && !selectedItem\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `availability ${isAvailable ? 'available' : 'unavailable'}`,\n              children: isAvailable ? `Доступно: ${availableQuantity}` : \"Нет в наличии\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 37\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          className: \"button button-cancel\",\n          children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleConfirm,\n          className: \"button button-confirm\",\n          children: \"\\u0413\\u043E\\u0442\\u043E\\u0432\\u043E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this), modalRoot.current);\n};\n_s(EquipmentList, \"SvjyA1qZMh8fNiIddOJ73Ey37cQ=\");\n_c = EquipmentList;\nexport default EquipmentList;\nvar _c;\n$RefreshReg$(_c, \"EquipmentList\");","map":{"version":3,"names":["React","useState","useEffect","useRef","ReactDOM","API_BASE_URL","jsxDEV","_jsxDEV","EquipmentList","onSelect","onClose","selectedEquipment","_s","listRef","equipment","setEquipment","loading","setLoading","selectedItems","setSelectedItems","Array","isArray","searchTerm","setSearchTerm","modalRoot","document","createElement","current","id","body","appendChild","removeChild","fetchEquipment","response","fetch","ok","Error","status","data","json","console","log","processedData","map","item","fact","total","rented","error","handleClickOutside","event","contains","target","addEventListener","removeEventListener","toggleSelection","prevSelected","existingItem","find","selected","filter","maxQuantity","Math","max","quantity","min","updateQuantity","itemId","newQuantity","maxAvailable","eq","handleConfirm","filteredEquipment","name","toLowerCase","includes","createPortal","className","ref","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","selectedItem","availableQuantity","isAvailable","onClick","stopPropagation","disabled","parseInt","checked","_c","$RefreshReg$"],"sources":["C:/Users/discopony/Desktop/MSchool/Notion automation/Railway_Rent/frontend/src/components/EquipmentList.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport API_BASE_URL from \"../config\";\r\nimport './EquipmentList.css';\r\n\r\nconst EquipmentList = ({ onSelect, onClose, selectedEquipment }) => {\r\n    const listRef = useRef(null);\r\n    const [equipment, setEquipment] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [selectedItems, setSelectedItems] = useState(Array.isArray(selectedEquipment) ? selectedEquipment : []);\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n    const modalRoot = useRef(document.createElement('div'));\r\n\r\n    useEffect(() => {\r\n        modalRoot.current.id = 'modal-root';\r\n        document.body.appendChild(modalRoot.current);\r\n\r\n        return () => {\r\n            document.body.removeChild(modalRoot.current);\r\n        };\r\n    }, []);\r\n    \r\n    useEffect(() => {\r\n        const fetchEquipment = async () => {\r\n            try {\r\n                const response = await fetch(`${API_BASE_URL}/inventory`);\r\n                if (!response.ok) {\r\n                    throw new Error(`HTTP error! status: ${response.status}`);\r\n                }\r\n                const data = await response.json();\r\n                console.log(\"Полученные данные:\", data);\r\n                \r\n                // Преобразуем данные, вычисляя fact как total - rented\r\n                const processedData = data.map(item => ({\r\n                    ...item,\r\n                    fact: item.total - (item.rented || 0)\r\n                }));\r\n                \r\n                setEquipment(processedData);\r\n                setLoading(false);\r\n            } catch (error) {\r\n                console.error(\"Ошибка загрузки оборудования:\", error);\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchEquipment();\r\n\r\n        const handleClickOutside = (event) => {\r\n            if (listRef.current && !listRef.current.contains(event.target)) {\r\n                onClose();\r\n            }\r\n        };\r\n\r\n        document.addEventListener(\"mousedown\", handleClickOutside);\r\n        return () => {\r\n            document.removeEventListener(\"mousedown\", handleClickOutside);\r\n        };\r\n    }, [onClose]);\r\n\r\n    const toggleSelection = (item) => {\r\n        setSelectedItems((prevSelected) => {\r\n            if (!Array.isArray(prevSelected)) prevSelected = [];\r\n            const existingItem = prevSelected.find((selected) => selected.id === item.id);\r\n            if (existingItem) {\r\n                return prevSelected.filter((selected) => selected.id !== item.id);\r\n            } else {\r\n                // Используем вычисленное значение fact для максимального количества\r\n                const maxQuantity = Math.max(0, item.total - (item.rented || 0));\r\n                const quantity = Math.min(1, maxQuantity);\r\n                return [...prevSelected, { ...item, quantity }];\r\n            }\r\n        });\r\n    };\r\n\r\n    const updateQuantity = (itemId, newQuantity, maxAvailable) => {\r\n        if (!Array.isArray(selectedItems)) return;\r\n        const item = equipment.find(eq => eq.id === itemId);\r\n        if (!item) return;\r\n\r\n        // Используем вычисленное значение fact для максимального количества\r\n        const maxQuantity = Math.max(0, item.total - (item.rented || 0));\r\n        const quantity = Math.min(Math.max(1, newQuantity), maxQuantity);\r\n        \r\n        setSelectedItems(selectedItems.map((item) =>\r\n            item.id === itemId ? { ...item, quantity } : item\r\n        ));\r\n    };\r\n\r\n    const handleConfirm = () => {\r\n        onSelect(Array.isArray(selectedItems) ? selectedItems : []);\r\n        onClose();\r\n    };\r\n\r\n    const filteredEquipment = equipment.filter((item) =>\r\n        item.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n\r\n    return ReactDOM.createPortal(\r\n        <div className=\"equipment-modal\" ref={listRef}>\r\n            <div className=\"equipment-modal-content\">\r\n                <h3>Выберите оборудование</h3>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Поиск...\"\r\n                    value={searchTerm}\r\n                    onChange={(e) => setSearchTerm(e.target.value)}\r\n                    className=\"equipment-search\"\r\n                />\r\n                {loading ? (\r\n                    <p>Загрузка...</p>\r\n                ) : (\r\n                    <ul className=\"equipment-list\">\r\n                        {filteredEquipment.map((item) => {\r\n                            const selectedItem = selectedItems.find(\r\n                                selected => selected.id === item.id\r\n                            );\r\n                            // Вычисляем доступное количество как total - rented\r\n                            const availableQuantity = Math.max(0, item.total - (item.rented || 0));\r\n                            const isAvailable = availableQuantity > 0;\r\n\r\n                            return (\r\n                                <li key={item.id} className=\"equipment-item\">\r\n                                    <div className=\"equipment-controls\">\r\n                                        {selectedItem && (\r\n                                            <div className=\"quantity-control\">\r\n                                                <button \r\n                                                    onClick={(e) => {\r\n                                                        e.stopPropagation();\r\n                                                        updateQuantity(\r\n                                                            item.id, \r\n                                                            selectedItem.quantity - 1,\r\n                                                            availableQuantity\r\n                                                        );\r\n                                                    }}\r\n                                                    className=\"quantity-button\"\r\n                                                    disabled={selectedItem.quantity <= 1}\r\n                                                >\r\n                                                    -\r\n                                                </button>\r\n                                                <input\r\n                                                    type=\"number\"\r\n                                                    value={selectedItem.quantity}\r\n                                                    onChange={(e) => updateQuantity(\r\n                                                        item.id,\r\n                                                        parseInt(e.target.value) || 1,\r\n                                                        availableQuantity\r\n                                                    )}\r\n                                                    className=\"quantity-input\"\r\n                                                    min=\"1\"\r\n                                                    max={availableQuantity}\r\n                                                />\r\n                                                <button \r\n                                                    onClick={(e) => {\r\n                                                        e.stopPropagation();\r\n                                                        updateQuantity(\r\n                                                            item.id,\r\n                                                            selectedItem.quantity + 1,\r\n                                                            availableQuantity\r\n                                                        );\r\n                                                    }}\r\n                                                    className=\"quantity-button\"\r\n                                                    disabled={selectedItem.quantity >= availableQuantity}\r\n                                                >\r\n                                                    +\r\n                                                </button>\r\n                                            </div>\r\n                                        )}\r\n                                        <label className=\"equipment-label\">\r\n                                            <input\r\n                                                type=\"checkbox\"\r\n                                                checked={!!selectedItem}\r\n                                                onChange={() => toggleSelection(item)}\r\n                                                disabled={!isAvailable && !selectedItem}\r\n                                            />\r\n                                            <span>{item.name}</span>\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className={`availability ${isAvailable ? 'available' : 'unavailable'}`}>\r\n                                        {isAvailable \r\n                                            ? `Доступно: ${availableQuantity}` \r\n                                            : \"Нет в наличии\"\r\n                                        }\r\n                                    </div>\r\n                                </li>\r\n                            );\r\n                        })}\r\n                    </ul>\r\n                )}\r\n                <div className=\"modal-buttons\">\r\n                    <button onClick={onClose} className=\"button button-cancel\">\r\n                        Отмена\r\n                    </button>\r\n                    <button onClick={handleConfirm} className=\"button button-confirm\">\r\n                        Готово\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>,\r\n        modalRoot.current\r\n    );\r\n};\r\n\r\nexport default EquipmentList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}