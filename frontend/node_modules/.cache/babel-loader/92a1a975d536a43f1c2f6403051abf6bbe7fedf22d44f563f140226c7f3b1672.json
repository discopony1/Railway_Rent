{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\discopony\\\\Desktop\\\\MSchool\\\\Notion automation\\\\Railway_Rent\\\\frontend\\\\src\\\\components\\\\DebugToggle.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DebugToggle({\n  onToggle\n}) {\n  _s();\n  const [debugMode, setDebugMode] = useState(() => {\n    return JSON.parse(localStorage.getItem(\"debugMode\")) || false;\n  });\n  useEffect(() => {\n    onToggle(debugMode);\n  }, [debugMode, onToggle]);\n  const toggleDebug = () => {\n    setDebugMode(prevMode => {\n      const newDebugMode = !prevMode;\n      localStorage.setItem(\"debugMode\", JSON.stringify(newDebugMode));\n      return newDebugMode;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: toggleDebug,\n    style: {\n      marginBottom: \"10px\"\n    },\n    children: debugMode ? \"üîß Debug ON\" : \"‚öôÔ∏è Debug OFF\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(DebugToggle, \"t1W46un/wyqy+sxNvpeoeQHd9M4=\");\n_c = DebugToggle;\nexport default DebugToggle;\nvar _c;\n$RefreshReg$(_c, \"DebugToggle\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","DebugToggle","onToggle","_s","debugMode","setDebugMode","JSON","parse","localStorage","getItem","toggleDebug","prevMode","newDebugMode","setItem","stringify","onClick","style","marginBottom","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/discopony/Desktop/MSchool/Notion automation/Railway_Rent/frontend/src/components/DebugToggle.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nfunction DebugToggle({ onToggle }) {\r\n  const [debugMode, setDebugMode] = useState(() => {\r\n    return JSON.parse(localStorage.getItem(\"debugMode\")) || false;\r\n  });\r\n\r\n  useEffect(() => {\r\n    onToggle(debugMode);\r\n  }, [debugMode, onToggle]);\r\n\r\n  const toggleDebug = () => {\r\n    setDebugMode((prevMode) => {\r\n      const newDebugMode = !prevMode;\r\n      localStorage.setItem(\"debugMode\", JSON.stringify(newDebugMode));\r\n      return newDebugMode;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <button onClick={toggleDebug} style={{ marginBottom: \"10px\" }}>\r\n      {debugMode ? \"üîß Debug ON\" : \"‚öôÔ∏è Debug OFF\"}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default DebugToggle;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,WAAWA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACjC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,MAAM;IAC/C,OAAOS,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,IAAI,KAAK;EAC/D,CAAC,CAAC;EAEFX,SAAS,CAAC,MAAM;IACdI,QAAQ,CAACE,SAAS,CAAC;EACrB,CAAC,EAAE,CAACA,SAAS,EAAEF,QAAQ,CAAC,CAAC;EAEzB,MAAMQ,WAAW,GAAGA,CAAA,KAAM;IACxBL,YAAY,CAAEM,QAAQ,IAAK;MACzB,MAAMC,YAAY,GAAG,CAACD,QAAQ;MAC9BH,YAAY,CAACK,OAAO,CAAC,WAAW,EAAEP,IAAI,CAACQ,SAAS,CAACF,YAAY,CAAC,CAAC;MAC/D,OAAOA,YAAY;IACrB,CAAC,CAAC;EACJ,CAAC;EAED,oBACEZ,OAAA;IAAQe,OAAO,EAAEL,WAAY;IAACM,KAAK,EAAE;MAAEC,YAAY,EAAE;IAAO,CAAE;IAAAC,QAAA,EAC3Dd,SAAS,GAAG,aAAa,GAAG;EAAc;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEb;AAACnB,EAAA,CAtBQF,WAAW;AAAAsB,EAAA,GAAXtB,WAAW;AAwBpB,eAAeA,WAAW;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}