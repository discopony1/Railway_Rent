{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\discopony\\\\Desktop\\\\MSchool\\\\Notion automation\\\\Railway_Rent\\\\frontend\\\\src\\\\components\\\\EquipmentList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport API_BASE_URL from \"../config\";\nimport LoadingSpinner from \"./LoadingSpinner\";\nimport { getCategoryColor } from \"../utils/categoryColors\";\nimport \"./EquipmentList.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst modalRoot = document.getElementById(\"modal-root\") || (() => {\n  const el = document.createElement(\"div\");\n  el.id = \"modal-root\";\n  document.body.appendChild(el);\n  return el;\n})();\nconst EquipmentList = ({\n  onSelect,\n  onClose,\n  selectedEquipment,\n  bookingsInfo,\n  startDate,\n  endDate,\n  bookingId\n}) => {\n  _s();\n  const listRef = useRef(null);\n  const [equipment, setEquipment] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedItems, setSelectedItems] = useState(Array.isArray(selectedEquipment) ? selectedEquipment : []);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [expandedCategories, setExpandedCategories] = useState({});\n\n  // Синхронизация с внешним selectedEquipment\n  useEffect(() => {\n    if (Array.isArray(selectedEquipment)) {\n      setSelectedItems(selectedEquipment);\n    }\n  }, [selectedEquipment]);\n  useEffect(() => {\n    const fetchEquipment = async () => {\n      try {\n        let url = `${API_BASE_URL}/inventory`;\n\n        // Если указаны даты аренды, используем новый API endpoint для расчета доступности\n        if (startDate && endDate) {\n          const params = new URLSearchParams({\n            start_date: startDate,\n            end_date: endDate\n          });\n          if (bookingId) {\n            params.append('exclude_booking_id', bookingId);\n          }\n\n          // Передаем текущее оборудование для корректного расчета доступности\n          if (selectedEquipment && selectedEquipment.length > 0) {\n            params.append('current_equipment', JSON.stringify(selectedEquipment));\n          }\n          url = `${API_BASE_URL}/inventory/available?${params.toString()}`;\n        }\n        const response = await fetch(url);\n        if (!response.ok) {\n          throw new Error(`Ошибка загрузки: ${response.status}`);\n        }\n        const data = await response.json();\n        // Проверяем, есть ли странные значения\n        const strangeItems = data.filter(item => item.total > 20 || item.available !== undefined && item.available > 20);\n        if (strangeItems.length > 0) {\n          console.warn(\"⚠️ Найдены элементы с большими значениями:\", strangeItems);\n        }\n        setEquipment(data);\n      } catch (error) {\n        console.error(\"Ошибка загрузки оборудования:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchEquipment();\n    const handleClickOutside = event => {\n      if (listRef.current && !listRef.current.contains(event.target)) {\n        onClose();\n      }\n    };\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [onClose, startDate, endDate, bookingId]);\n  const updateQuantity = (itemId, newQuantity) => {\n    setSelectedItems(prevSelected => prevSelected.map(item => {\n      if (item.id === itemId) {\n        // Находим оригинальное оборудование для получения максимального количества\n        const originalItem = equipment.find(eq => eq.id === itemId);\n        const maxAvailable = originalItem ? originalItem.available !== undefined ? originalItem.available : originalItem.total - (originalItem.rented || 0) : item.total;\n        const finalQuantity = Math.max(1, Math.min(newQuantity || 1, maxAvailable));\n        return {\n          ...item,\n          quantity: finalQuantity\n        };\n      }\n      return item;\n    }));\n  };\n\n  // Функция для расчета реально доступного количества с учетом уже выбранного\n  const getAvailableQuantity = item => {\n    const selectedItem = selectedItems.find(selected => selected.id === item.id);\n    const selectedQuantity = selectedItem ? selectedItem.quantity : 0;\n    const baseAvailable = item.available !== undefined ? item.available : item.total - (item.rented || 0);\n    return Math.max(0, baseAvailable - selectedQuantity);\n  };\n  const removeItem = itemId => {\n    setSelectedItems(prevSelected => prevSelected.filter(item => item.id !== itemId));\n  };\n  const toggleSelection = item => {\n    setSelectedItems(prevSelected => {\n      if (!Array.isArray(prevSelected)) prevSelected = [];\n      const existingItem = prevSelected.find(selected => selected.id === item.id);\n      if (existingItem) {\n        return prevSelected.filter(selected => selected.id !== item.id);\n      } else {\n        return [...prevSelected, {\n          ...item,\n          quantity: 1\n        }];\n      }\n    });\n  };\n  const handleConfirm = () => {\n    onSelect(Array.isArray(selectedItems) ? selectedItems : []);\n    onClose();\n  };\n  const collator = new Intl.Collator(\"ru\", {\n    numeric: true,\n    sensitivity: \"base\"\n  });\n  const groupedEquipment = equipment.reduce((acc, item) => {\n    if (!acc[item.category]) acc[item.category] = [];\n    acc[item.category].push(item);\n    return acc;\n  }, {});\n  Object.keys(groupedEquipment).forEach(category => {\n    groupedEquipment[category].sort((a, b) => collator.compare(a.name, b.name));\n  });\n  const toggleCategory = category => {\n    setExpandedCategories(prev => ({\n      ...prev,\n      [category]: !prev[category]\n    }));\n  };\n  const filteredEquipment = equipment.filter(item => item.name.toLowerCase().includes(searchTerm.toLowerCase())).sort((a, b) => collator.compare(a.name, b.name));\n  const isSearching = searchTerm.trim().length > 0;\n  return /*#__PURE__*/ReactDOM.createPortal(/*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"equipment-modal-overlay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"equipment-modal\",\n      ref: listRef,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"equipment-modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"equipment-modal-title\",\n          children: \"\\uD83D\\uDCE6 \\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043E\\u0431\\u043E\\u0440\\u0443\\u0434\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          className: \"equipment-modal-close\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"equipment-modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selected-equipment\",\n          children: selectedItems.map((selectedItem, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"selected-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"remove-item\",\n              onClick: () => removeItem(selectedItem.id),\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [selectedItem.name, \" \\xD7\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: selectedItem.quantity || 1,\n              onChange: e => updateQuantity(selectedItem.id, parseInt(e.target.value) || 1),\n              min: \"1\",\n              max: selectedItem.available !== undefined ? selectedItem.available : (typeof selectedItem.total === 'number' ? selectedItem.total : 0) - (typeof selectedItem.rented === 'number' ? selectedItem.rented : 0),\n              className: \"selected-quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 29\n            }, this)]\n          }, selectedItem.id || `selected-${index}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\u041F\\u043E\\u0438\\u0441\\u043A...\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value),\n          className: \"equipment-search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 17\n        }, this), loading ? /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n          message: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u043E\\u0431\\u043E\\u0440\\u0443\\u0434\\u043E\\u0432\\u0430\\u043D\\u0438\\u044F...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"equipment-list\",\n          children: isSearching ? filteredEquipment.map(item => {\n            const selectedItem = selectedItems.find(selected => selected.id === item.id);\n            const availableQuantity = getAvailableQuantity(item);\n            const isAvailable = availableQuantity > 0;\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"equipment-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"equipment-label\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: !!selectedItem,\n                  onChange: () => toggleSelection(item),\n                  disabled: !isAvailable\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `availability ${isAvailable ? \"available\" : \"unavailable\"}`,\n                children: [isAvailable ? `Доступно: ${availableQuantity}` : \"Нет в наличии\", item.occupied && item.occupied > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"occupied-info\",\n                  children: [\"\\u0417\\u0430\\u043D\\u044F\\u0442\\u043E: \", item.occupied, \" \\u0438\\u0437 \", item.total]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 41\n              }, this)]\n            }, item.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 37\n            }, this);\n          }) : Object.entries(groupedEquipment).map(([category, items]) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"equipment-category\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"category-toggle\",\n              onClick: () => toggleCategory(category),\n              children: [expandedCategories[category] ? \"▼\" : \"▶\", \" \", category]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 37\n            }, this), expandedCategories[category] && /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: items.map(item => {\n                const selectedItem = selectedItems.find(selected => selected.id === item.id);\n                const availableQuantity = getAvailableQuantity(item);\n                const isAvailable = availableQuantity > 0;\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"equipment-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"equipment-label\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"checkbox\",\n                      checked: !!selectedItem,\n                      onChange: () => toggleSelection(item),\n                      disabled: !isAvailable\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 253,\n                      columnNumber: 61\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: item.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 259,\n                      columnNumber: 61\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 252,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `availability ${isAvailable ? \"available\" : \"unavailable\"}`,\n                    children: [isAvailable ? `Доступно: ${availableQuantity}` : \"Нет в наличии\", item.occupied && item.occupied > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"occupied-info\",\n                      children: [\"\\u0417\\u0430\\u043D\\u044F\\u0442\\u043E: \", item.occupied, \" \\u0438\\u0437 \", item.total]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 264,\n                      columnNumber: 65\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 57\n                  }, this)]\n                }, item.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 53\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 41\n            }, this)]\n          }, category, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onClose,\n            className: \"button button-cancel\",\n            children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleConfirm,\n            className: \"button button-confirm\",\n            children: \"\\u0413\\u043E\\u0442\\u043E\\u0432\\u043E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true), modalRoot);\n};\n_s(EquipmentList, \"Z6gaHeG6EOwtvZepO5CXjydPQsI=\");\n_c = EquipmentList;\nexport default EquipmentList;\nvar _c;\n$RefreshReg$(_c, \"EquipmentList\");","map":{"version":3,"names":["React","useState","useEffect","useRef","ReactDOM","API_BASE_URL","LoadingSpinner","getCategoryColor","jsxDEV","_jsxDEV","Fragment","_Fragment","modalRoot","document","getElementById","el","createElement","id","body","appendChild","EquipmentList","onSelect","onClose","selectedEquipment","bookingsInfo","startDate","endDate","bookingId","_s","listRef","equipment","setEquipment","loading","setLoading","selectedItems","setSelectedItems","Array","isArray","searchTerm","setSearchTerm","expandedCategories","setExpandedCategories","fetchEquipment","url","params","URLSearchParams","start_date","end_date","append","length","JSON","stringify","toString","response","fetch","ok","Error","status","data","json","strangeItems","filter","item","total","available","undefined","console","warn","error","handleClickOutside","event","current","contains","target","addEventListener","removeEventListener","updateQuantity","itemId","newQuantity","prevSelected","map","originalItem","find","eq","maxAvailable","rented","finalQuantity","Math","max","min","quantity","getAvailableQuantity","selectedItem","selected","selectedQuantity","baseAvailable","removeItem","toggleSelection","existingItem","handleConfirm","collator","Intl","Collator","numeric","sensitivity","groupedEquipment","reduce","acc","category","push","Object","keys","forEach","sort","a","b","compare","name","toggleCategory","prev","filteredEquipment","toLowerCase","includes","isSearching","trim","createPortal","children","className","fileName","_jsxFileName","lineNumber","columnNumber","ref","onClick","index","type","value","onChange","e","parseInt","placeholder","message","availableQuantity","isAvailable","checked","disabled","occupied","entries","items","_c","$RefreshReg$"],"sources":["C:/Users/discopony/Desktop/MSchool/Notion automation/Railway_Rent/frontend/src/components/EquipmentList.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport API_BASE_URL from \"../config\";\nimport LoadingSpinner from \"./LoadingSpinner\";\nimport { getCategoryColor } from \"../utils/categoryColors\";\nimport \"./EquipmentList.css\";\n\nconst modalRoot = document.getElementById(\"modal-root\") || (() => {\n    const el = document.createElement(\"div\");\n    el.id = \"modal-root\";\n    document.body.appendChild(el);\n    return el;\n})();\n\nconst EquipmentList = ({ onSelect, onClose, selectedEquipment, bookingsInfo, startDate, endDate, bookingId }) => {\n    const listRef = useRef(null);\n    const [equipment, setEquipment] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [selectedItems, setSelectedItems] = useState(Array.isArray(selectedEquipment) ? selectedEquipment : []);\n    const [searchTerm, setSearchTerm] = useState(\"\");\n    const [expandedCategories, setExpandedCategories] = useState({});\n\n    // Синхронизация с внешним selectedEquipment\n    useEffect(() => {\n        if (Array.isArray(selectedEquipment)) {\n            setSelectedItems(selectedEquipment);\n        }\n    }, [selectedEquipment]);\n\n    useEffect(() => {\n        const fetchEquipment = async () => {\n            try {\n                let url = `${API_BASE_URL}/inventory`;\n                \n                // Если указаны даты аренды, используем новый API endpoint для расчета доступности\n                if (startDate && endDate) {\n                    const params = new URLSearchParams({\n                        start_date: startDate,\n                        end_date: endDate,\n                    });\n                    \n                    if (bookingId) {\n                        params.append('exclude_booking_id', bookingId);\n                    }\n                    \n                    // Передаем текущее оборудование для корректного расчета доступности\n                    if (selectedEquipment && selectedEquipment.length > 0) {\n                        params.append('current_equipment', JSON.stringify(selectedEquipment));\n                    }\n                    \n                    url = `${API_BASE_URL}/inventory/available?${params.toString()}`;\n                }\n\n                const response = await fetch(url);\n                if (!response.ok) {\n                    throw new Error(`Ошибка загрузки: ${response.status}`);\n                }\n                const data = await response.json();\n                // Проверяем, есть ли странные значения\n                const strangeItems = data.filter(item => \n                    item.total > 20 || (item.available !== undefined && item.available > 20)\n                );\n                if (strangeItems.length > 0) {\n                    console.warn(\"⚠️ Найдены элементы с большими значениями:\", strangeItems);\n                }\n                setEquipment(data);\n            } catch (error) {\n                console.error(\"Ошибка загрузки оборудования:\", error);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchEquipment();\n\n        const handleClickOutside = (event) => {\n            if (listRef.current && !listRef.current.contains(event.target)) {\n                onClose();\n            }\n        };\n\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return () => {\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n    }, [onClose, startDate, endDate, bookingId]);\n\n    const updateQuantity = (itemId, newQuantity) => {\n        setSelectedItems((prevSelected) =>\n            prevSelected.map((item) => {\n                if (item.id === itemId) {\n                    // Находим оригинальное оборудование для получения максимального количества\n                    const originalItem = equipment.find(eq => eq.id === itemId);\n                    const maxAvailable = originalItem ? \n                        (originalItem.available !== undefined ? originalItem.available : originalItem.total - (originalItem.rented || 0)) \n                        : item.total;\n                    \n                    const finalQuantity = Math.max(1, Math.min(newQuantity || 1, maxAvailable));\n                    return { ...item, quantity: finalQuantity };\n                }\n                return item;\n            })\n        );\n    };\n    \n    // Функция для расчета реально доступного количества с учетом уже выбранного\n    const getAvailableQuantity = (item) => {\n        const selectedItem = selectedItems.find(selected => selected.id === item.id);\n        const selectedQuantity = selectedItem ? selectedItem.quantity : 0;\n        \n        const baseAvailable = item.available !== undefined \n            ? item.available \n            : item.total - (item.rented || 0);\n            \n        return Math.max(0, baseAvailable - selectedQuantity);\n    };\n\n    const removeItem = (itemId) => {\n        setSelectedItems((prevSelected) => prevSelected.filter((item) => item.id !== itemId));\n    };\n\n    const toggleSelection = (item) => {\n        setSelectedItems((prevSelected) => {\n            if (!Array.isArray(prevSelected)) prevSelected = [];\n\n            const existingItem = prevSelected.find((selected) => selected.id === item.id);\n            if (existingItem) {\n                return prevSelected.filter((selected) => selected.id !== item.id);\n            } else {\n                return [...prevSelected, { ...item, quantity: 1 }];\n            }\n        });\n    };\n\n    const handleConfirm = () => {\n        onSelect(Array.isArray(selectedItems) ? selectedItems : []);\n        onClose();\n    };\n\n    const collator = new Intl.Collator(\"ru\", { numeric: true, sensitivity: \"base\" });\n\n    const groupedEquipment = equipment.reduce((acc, item) => {\n        if (!acc[item.category]) acc[item.category] = [];\n        acc[item.category].push(item);\n        return acc;\n    }, {});\n\n    Object.keys(groupedEquipment).forEach((category) => {\n        groupedEquipment[category].sort((a, b) => collator.compare(a.name, b.name));\n    });\n\n    const toggleCategory = (category) => {\n        setExpandedCategories((prev) => ({\n            ...prev,\n            [category]: !prev[category],\n        }));\n    };\n\n    const filteredEquipment = equipment\n        .filter((item) => item.name.toLowerCase().includes(searchTerm.toLowerCase()))\n        .sort((a, b) => collator.compare(a.name, b.name));\n\n    const isSearching = searchTerm.trim().length > 0;\n\n    return ReactDOM.createPortal(\n        <>\n            <div className=\"equipment-modal-overlay\" />\n            <div className=\"equipment-modal\" ref={listRef}>\n                <div className=\"equipment-modal-header\">\n                    <h3 className=\"equipment-modal-title\">📦 Выберите оборудование</h3>\n                    <button onClick={onClose} className=\"equipment-modal-close\">×</button>\n                </div>\n                <div className=\"equipment-modal-content\">\n\n                {/* Отображение выбранного оборудования в виде блоков */}\n                <div className=\"selected-equipment\">\n                    {selectedItems.map((selectedItem, index) => (\n                        <div key={selectedItem.id || `selected-${index}`} className=\"selected-item\">\n                            <span className=\"remove-item\" onClick={() => removeItem(selectedItem.id)}>×</span>\n                            <span>{selectedItem.name} ×</span>\n                            <input\n                                type=\"number\"\n                                value={selectedItem.quantity || 1}\n                                onChange={(e) => updateQuantity(selectedItem.id, parseInt(e.target.value) || 1)}\n                                min=\"1\"\n                                max={selectedItem.available !== undefined ? selectedItem.available : \n                                    (typeof selectedItem.total === 'number' ? selectedItem.total : 0) -\n                                    (typeof selectedItem.rented === 'number' ? selectedItem.rented : 0)\n                                }\n                                className=\"selected-quantity\"\n                            />\n                        </div>\n                    ))}\n                </div>\n\n                <input\n                    type=\"text\"\n                    placeholder=\"Поиск...\"\n                    value={searchTerm}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                    className=\"equipment-search\"\n                />\n\n                {loading ? (\n                    <LoadingSpinner message=\"Загрузка оборудования...\" />\n                ) : (\n                    <div className=\"equipment-list\">\n                        {isSearching ? (\n                            filteredEquipment.map((item) => {\n                                const selectedItem = selectedItems.find((selected) => selected.id === item.id);\n                                const availableQuantity = getAvailableQuantity(item);\n                                const isAvailable = availableQuantity > 0;\n\n                                return (\n                                    <li key={item.id} className=\"equipment-item\">\n                                        <label className=\"equipment-label\">\n                                            <input\n                                                type=\"checkbox\"\n                                                checked={!!selectedItem}\n                                                onChange={() => toggleSelection(item)}\n                                                disabled={!isAvailable}\n                                            />\n                                            <span>{item.name}</span>\n                                        </label>\n                                        <div className={`availability ${isAvailable ? \"available\" : \"unavailable\"}`}>\n                                            {isAvailable ? `Доступно: ${availableQuantity}` : \"Нет в наличии\"}\n                                            {item.occupied && item.occupied > 0 && (\n                                                <div className=\"occupied-info\">\n                                                    Занято: {item.occupied} из {item.total}\n                                                </div>\n                                            )}\n                                        </div>\n                                        \n                                    </li>\n                                );\n                            })\n                        ) : (\n                            Object.entries(groupedEquipment).map(([category, items]) => (\n                                <div key={category} className=\"equipment-category\">\n                                    <button className=\"category-toggle\" onClick={() => toggleCategory(category)}>\n                                        {expandedCategories[category] ? \"▼\" : \"▶\"} {category}\n                                    </button>\n                                    {expandedCategories[category] && (\n                                        <ul>\n                                            {items.map((item) => {\n                                                const selectedItem = selectedItems.find((selected) => selected.id === item.id);\n                                                const availableQuantity = getAvailableQuantity(item);\n                                                const isAvailable = availableQuantity > 0;\n\n                                                return (\n                                                    <li key={item.id} className=\"equipment-item\">\n                                                        <label className=\"equipment-label\">\n                                                            <input\n                                                                type=\"checkbox\"\n                                                                checked={!!selectedItem}\n                                                                onChange={() => toggleSelection(item)}\n                                                                disabled={!isAvailable}\n                                                            />\n                                                            <span>{item.name}</span>\n                                                        </label>\n                                                        <div className={`availability ${isAvailable ? \"available\" : \"unavailable\"}`}>\n                                                            {isAvailable ? `Доступно: ${availableQuantity}` : \"Нет в наличии\"}\n                                                            {item.occupied && item.occupied > 0 && (\n                                                                <div className=\"occupied-info\">\n                                                                    Занято: {item.occupied} из {item.total}\n                                                                </div>\n                                                            )}\n                                                        \n                                                        </div>\n                                                    </li>\n                                                );\n                                            })}\n                                        </ul>\n                                    )}\n                                </div>\n                            ))\n                        )}\n                    </div>\n                )}\n\n                <div className=\"modal-buttons\">\n                    <button onClick={onClose} className=\"button button-cancel\">Отмена</button>\n                    <button onClick={handleConfirm} className=\"button button-confirm\">Готово</button>\n                </div>\n                </div>\n            </div>\n        </>,\n        modalRoot\n    );\n};\n\nexport default EquipmentList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}