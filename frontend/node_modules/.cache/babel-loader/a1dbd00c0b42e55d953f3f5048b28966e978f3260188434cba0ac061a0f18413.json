{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\discopony\\\\Desktop\\\\MSchool\\\\Notion automation\\\\Railway_Rent\\\\frontend\\\\src\\\\components\\\\NotificationSystem.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport './NotificationSystem.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet notificationId = 0;\nconst NotificationSystem = () => {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n\n  // Функция для добавления нотификации\n  const addNotification = useCallback((message, type = 'success') => {\n    const id = ++notificationId;\n    const notification = {\n      id,\n      message,\n      type,\n      // 'success', 'error', 'warning'\n      timestamp: Date.now()\n    };\n    setNotifications(prev => {\n      const newNotifications = [notification, ...prev];\n      // Ограничиваем максимум 3 нотификации\n      return newNotifications.slice(0, 3);\n    });\n\n    // Автоматическое удаление через 6 секунд\n    setTimeout(() => {\n      removeNotification(id);\n    }, 6000);\n    return id;\n  }, []);\n\n  // Функция для удаления нотификации\n  const removeNotification = useCallback(id => {\n    setNotifications(prev => prev.filter(notification => notification.id !== id));\n  }, []);\n\n  // Экспорт функций для использования в других компонентах\n  useEffect(() => {\n    window.showNotification = addNotification;\n    return () => {\n      delete window.showNotification;\n    };\n  }, [addNotification]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notification-container\",\n    children: notifications.map((notification, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `notification notification-${notification.type}`,\n      style: {\n        bottom: `${20 + index * 70}px`,\n        animationDelay: `${index * 100}ms`\n      },\n      onClick: () => removeNotification(notification.id),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notification-icon\",\n          children: [notification.type === 'success' && '✓', notification.type === 'error' && '✕', notification.type === 'warning' && '⚠']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notification-message\",\n          children: notification.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-close\",\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this)]\n    }, notification.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(NotificationSystem, \"vvtT3STxS0Rkst+6DgvdBKyebG0=\");\n_c = NotificationSystem;\nexport default NotificationSystem;\n\n// Утилитарные функции для использования в других компонентах\nexport const showSuccess = message => {\n  if (window.showNotification) {\n    window.showNotification(message, 'success');\n  }\n};\nexport const showError = message => {\n  if (window.showNotification) {\n    window.showNotification(message, 'error');\n  }\n};\nexport const showWarning = message => {\n  if (window.showNotification) {\n    window.showNotification(message, 'warning');\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"NotificationSystem\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","jsxDEV","_jsxDEV","notificationId","NotificationSystem","_s","notifications","setNotifications","addNotification","message","type","id","notification","timestamp","Date","now","prev","newNotifications","slice","setTimeout","removeNotification","filter","window","showNotification","className","children","map","index","style","bottom","animationDelay","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","showSuccess","showError","showWarning","$RefreshReg$"],"sources":["C:/Users/discopony/Desktop/MSchool/Notion automation/Railway_Rent/frontend/src/components/NotificationSystem.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport './NotificationSystem.css';\n\nlet notificationId = 0;\n\nconst NotificationSystem = () => {\n    const [notifications, setNotifications] = useState([]);\n\n    // Функция для добавления нотификации\n    const addNotification = useCallback((message, type = 'success') => {\n        const id = ++notificationId;\n        const notification = {\n            id,\n            message,\n            type, // 'success', 'error', 'warning'\n            timestamp: Date.now()\n        };\n\n        setNotifications(prev => {\n            const newNotifications = [notification, ...prev];\n            // Ограничиваем максимум 3 нотификации\n            return newNotifications.slice(0, 3);\n        });\n\n        // Автоматическое удаление через 6 секунд\n        setTimeout(() => {\n            removeNotification(id);\n        }, 6000);\n\n        return id;\n    }, []);\n\n    // Функция для удаления нотификации\n    const removeNotification = useCallback((id) => {\n        setNotifications(prev => prev.filter(notification => notification.id !== id));\n    }, []);\n\n    // Экспорт функций для использования в других компонентах\n    useEffect(() => {\n        window.showNotification = addNotification;\n        return () => {\n            delete window.showNotification;\n        };\n    }, [addNotification]);\n\n    return (\n        <div className=\"notification-container\">\n            {notifications.map((notification, index) => (\n                <div\n                    key={notification.id}\n                    className={`notification notification-${notification.type}`}\n                    style={{\n                        bottom: `${20 + index * 70}px`,\n                        animationDelay: `${index * 100}ms`\n                    }}\n                    onClick={() => removeNotification(notification.id)}\n                >\n                    <div className=\"notification-content\">\n                        <div className=\"notification-icon\">\n                            {notification.type === 'success' && '✓'}\n                            {notification.type === 'error' && '✕'}\n                            {notification.type === 'warning' && '⚠'}\n                        </div>\n                        <div className=\"notification-message\">\n                            {notification.message}\n                        </div>\n                    </div>\n                    <div className=\"notification-close\">×</div>\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default NotificationSystem;\n\n// Утилитарные функции для использования в других компонентах\nexport const showSuccess = (message) => {\n    if (window.showNotification) {\n        window.showNotification(message, 'success');\n    }\n};\n\nexport const showError = (message) => {\n    if (window.showNotification) {\n        window.showNotification(message, 'error');\n    }\n};\n\nexport const showWarning = (message) => {\n    if (window.showNotification) {\n        window.showNotification(message, 'warning');\n    }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}