{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\discopony\\\\Desktop\\\\MSchool\\\\Notion automation\\\\Railway_Rent\\\\frontend\\\\src\\\\components\\\\Inventory.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InventoryTable = () => {\n  _s();\n  const [inventory, setInventory] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [editingItem, setEditingItem] = useState(null); // Для редактирования\n  const [updatedData, setUpdatedData] = useState({}); // Для отслеживания обновленных данных\n\n  // Загрузка данных с сервера\n  useEffect(() => {\n    const fetchInventory = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5000/api/inventory\");\n        if (!response.ok) {\n          throw new Error(`Ошибка загрузки: ${response.status}`);\n        }\n        const data = await response.json();\n        setInventory(data);\n      } catch (error) {\n        console.error('Ошибка загрузки инвентаря:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchInventory();\n  }, []);\n\n  // Добавим метод для хранения старых значений при начале редактирования\n  const handleClickEdit = itemId => {\n    setEditingItem(itemId);\n    const selectedItem = inventory.find(item => item.id === itemId);\n\n    // Сохраняем старые значения для всех полей\n    setUpdatedData(prev => ({\n      ...prev,\n      [itemId]: {\n        name: selectedItem.name,\n        category: selectedItem.category,\n        subcategory: selectedItem.subcategory,\n        model: selectedItem.model,\n        serial_number: selectedItem.serial_number,\n        notes: selectedItem.notes,\n        status: selectedItem.status,\n        total: selectedItem.total,\n        belongs_to: selectedItem.belongs_to\n      }\n    }));\n  };\n\n  // Обновим handleInputChange так, чтобы отслеживались изменения\n  // Обработчик изменения данных в таблице\n  const handleInputChange = (e, field, id) => {\n    const value = e.target.value;\n    setInventory(prevInventory => prevInventory.map(item => item.id === id ? {\n      ...item,\n      [field]: value\n    } : item));\n\n    // Логируем изменения для проверки\n    console.log(`Field ${field} for item ${id} updated to:`, value);\n\n    // Обновляем состояние для отслеживания изменений\n    setUpdatedData(prev => {\n      const updated = {\n        ...prev\n      };\n\n      // Если объект для этого ID еще не существует, создаем его\n      if (!updated[id]) {\n        updated[id] = {};\n      }\n\n      // Обновляем поле, которое было изменено\n      updated[id][field] = value;\n      return updated;\n    });\n  };\n\n  // Сохранение изменений\n  const handleSave = async id => {\n    const updatedItem = inventory.find(item => item.id === id);\n    const updatedFields = updatedData[id] || {};\n    console.log(\"Old Item Data:\", updatedItem);\n    console.log(\"Updated Fields:\", updatedFields);\n    const updatedDataForAPI = {};\n    let hasChanges = false;\n\n    // Сравниваем только те поля, которые были изменены\n    Object.keys(updatedFields).forEach(key => {\n      const oldValue = updatedItem[key];\n      const newValue = updatedFields[key];\n      console.log(`Comparing field: ${key}`);\n      console.log(`Old value: ${oldValue}`);\n      console.log(`New value: ${newValue}`);\n\n      // Если значения отличаются, добавляем в обновленные данные\n      if (newValue !== oldValue) {\n        updatedDataForAPI[key] = newValue; // Добавляем только измененные поля\n        hasChanges = true;\n      }\n    });\n\n    // Логируем данные перед отправкой\n    console.log(\"Sending updated data:\", updatedDataForAPI);\n    if (!hasChanges) {\n      console.error('Нет изменений для отправки');\n      return; // Прерываем отправку, если изменений нет\n    }\n    try {\n      const response = await fetch(`http://localhost:5000/api/inventory/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updatedDataForAPI) // Отправляем только измененные поля\n      });\n      if (response.ok) {\n        alert(\"Инвентарь обновлен\");\n        setEditingItem(null); // Закрытие режима редактирования\n      } else {\n        alert(\"Ошибка при сохранении изменений\");\n      }\n    } catch (error) {\n      console.error('Ошибка при обновлении инвентаря:', error);\n    }\n  };\n\n  // Отображение строки инвентаря\n  const renderRow = item => {\n    if (editingItem === item.id) {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: item.name,\n            onChange: e => handleInputChange(e, 'name', item.id),\n            onBlur: () => handleSave(item.id) // Отправка изменений при завершении редактирования\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: item.category,\n            onChange: e => handleInputChange(e, 'category', item.id),\n            onBlur: () => handleSave(item.id) // Отправка изменений при завершении редактирования\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: item.subcategory,\n            onChange: e => handleInputChange(e, 'subcategory', item.id),\n            onBlur: () => handleSave(item.id) // Отправка изменений при завершении редактирования\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: item.model,\n            onChange: e => handleInputChange(e, 'model', item.id),\n            onBlur: () => handleSave(item.id) // Отправка изменений при завершении редактирования\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: item.serial_number,\n            onChange: e => handleInputChange(e, 'serial_number', item.id),\n            onBlur: () => handleSave(item.id) // Отправка изменений при завершении редактирования\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: item.notes,\n            onChange: e => handleInputChange(e, 'notes', item.id),\n            onBlur: () => handleSave(item.id) // Отправка изменений при завершении редактирования\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: item.status,\n            onChange: e => handleInputChange(e, 'status', item.id),\n            onBlur: () => handleSave(item.id) // Отправка изменений при завершении редактирования\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: item.total,\n            onChange: e => handleInputChange(e, 'total', item.id),\n            onBlur: () => handleSave(item.id) // Отправка изменений при завершении редактирования\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: item.belongs_to,\n            onChange: e => handleInputChange(e, 'belongs_to', item.id),\n            onBlur: () => handleSave(item.id) // Отправка изменений при завершении редактирования\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSave(item.id),\n            children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setEditingItem(null),\n            children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        onClick: () => handleClickEdit(item.id),\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.subcategory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.model\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.serial_number\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.notes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.total\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.belongs_to\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 21\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0418\\u043D\\u0432\\u0435\\u043D\\u0442\\u0430\\u0440\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u041A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u041F\\u043E\\u0434\\u043A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u041C\\u043E\\u0434\\u0435\\u043B\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u0421\\u0435\\u0440\\u0438\\u0439\\u043D\\u044B\\u0439 \\u043D\\u043E\\u043C\\u0435\\u0440\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u041F\\u0440\\u0438\\u043C\\u0435\\u0447\\u0430\\u043D\\u0438\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u041E\\u0431\\u0449\\u0435\\u0435 \\u043A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u041A\\u043E\\u043C\\u0443 \\u043F\\u0440\\u0438\\u043D\\u0430\\u0434\\u043B\\u0435\\u0436\\u0438\\u0442\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u0414\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: inventory.map(renderRow)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 243,\n    columnNumber: 9\n  }, this);\n};\n_s(InventoryTable, \"4lsy/8fHh02SpnJubLEziAl2/7U=\");\n_c = InventoryTable;\nexport default InventoryTable;\nvar _c;\n$RefreshReg$(_c, \"InventoryTable\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","InventoryTable","_s","inventory","setInventory","loading","setLoading","editingItem","setEditingItem","updatedData","setUpdatedData","fetchInventory","response","fetch","ok","Error","status","data","json","error","console","handleClickEdit","itemId","selectedItem","find","item","id","prev","name","category","subcategory","model","serial_number","notes","total","belongs_to","handleInputChange","e","field","value","target","prevInventory","map","log","updated","handleSave","updatedItem","updatedFields","updatedDataForAPI","hasChanges","Object","keys","forEach","key","oldValue","newValue","method","headers","body","JSON","stringify","alert","renderRow","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onBlur","onClick","_c","$RefreshReg$"],"sources":["C:/Users/discopony/Desktop/MSchool/Notion automation/Railway_Rent/frontend/src/components/Inventory.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst InventoryTable = () => {\r\n    const [inventory, setInventory] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [editingItem, setEditingItem] = useState(null); // Для редактирования\r\n    const [updatedData, setUpdatedData] = useState({}); // Для отслеживания обновленных данных\r\n\r\n    // Загрузка данных с сервера\r\n    useEffect(() => {\r\n        const fetchInventory = async () => {\r\n            try {\r\n                const response = await fetch(\"http://localhost:5000/api/inventory\");\r\n                if (!response.ok) {\r\n                    throw new Error(`Ошибка загрузки: ${response.status}`);\r\n                }\r\n                const data = await response.json();\r\n                setInventory(data);\r\n            } catch (error) {\r\n                console.error('Ошибка загрузки инвентаря:', error);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchInventory();\r\n    }, []);\r\n\r\n   // Добавим метод для хранения старых значений при начале редактирования\r\nconst handleClickEdit = (itemId) => {\r\n    setEditingItem(itemId);\r\n    const selectedItem = inventory.find(item => item.id === itemId);\r\n\r\n    // Сохраняем старые значения для всех полей\r\n    setUpdatedData(prev => ({\r\n        ...prev,\r\n        [itemId]: {\r\n            name: selectedItem.name,\r\n            category: selectedItem.category,\r\n            subcategory: selectedItem.subcategory,\r\n            model: selectedItem.model,\r\n            serial_number: selectedItem.serial_number,\r\n            notes: selectedItem.notes,\r\n            status: selectedItem.status,\r\n            total: selectedItem.total,\r\n            belongs_to: selectedItem.belongs_to,\r\n        }\r\n    }));\r\n};\r\n\r\n// Обновим handleInputChange так, чтобы отслеживались изменения\r\n// Обработчик изменения данных в таблице\r\nconst handleInputChange = (e, field, id) => {\r\n    const value = e.target.value;\r\n\r\n    setInventory(prevInventory =>\r\n        prevInventory.map(item =>\r\n            item.id === id ? { ...item, [field]: value } : item\r\n        )\r\n    );\r\n\r\n    // Логируем изменения для проверки\r\n    console.log(`Field ${field} for item ${id} updated to:`, value);\r\n\r\n    // Обновляем состояние для отслеживания изменений\r\n    setUpdatedData(prev => {\r\n        const updated = { ...prev };\r\n\r\n        // Если объект для этого ID еще не существует, создаем его\r\n        if (!updated[id]) {\r\n            updated[id] = {};\r\n        }\r\n\r\n        // Обновляем поле, которое было изменено\r\n        updated[id][field] = value;\r\n\r\n        return updated;\r\n    });\r\n};\r\n\r\n// Сохранение изменений\r\nconst handleSave = async (id) => {\r\n    const updatedItem = inventory.find((item) => item.id === id);\r\n    const updatedFields = updatedData[id] || {};\r\n\r\n    console.log(\"Old Item Data:\", updatedItem);\r\n    console.log(\"Updated Fields:\", updatedFields);\r\n\r\n    const updatedDataForAPI = {};\r\n    let hasChanges = false;\r\n\r\n    // Сравниваем только те поля, которые были изменены\r\n    Object.keys(updatedFields).forEach((key) => {\r\n        const oldValue = updatedItem[key];\r\n        const newValue = updatedFields[key];\r\n\r\n        console.log(`Comparing field: ${key}`);\r\n        console.log(`Old value: ${oldValue}`);\r\n        console.log(`New value: ${newValue}`);\r\n\r\n        // Если значения отличаются, добавляем в обновленные данные\r\n        if (newValue !== oldValue) {\r\n            updatedDataForAPI[key] = newValue; // Добавляем только измененные поля\r\n            hasChanges = true;\r\n        }\r\n    });\r\n\r\n    // Логируем данные перед отправкой\r\n    console.log(\"Sending updated data:\", updatedDataForAPI);\r\n\r\n    if (!hasChanges) {\r\n        console.error('Нет изменений для отправки');\r\n        return;  // Прерываем отправку, если изменений нет\r\n    }\r\n\r\n    try {\r\n        const response = await fetch(`http://localhost:5000/api/inventory/${id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(updatedDataForAPI), // Отправляем только измененные поля\r\n        });\r\n\r\n        if (response.ok) {\r\n            alert(\"Инвентарь обновлен\");\r\n            setEditingItem(null); // Закрытие режима редактирования\r\n        } else {\r\n            alert(\"Ошибка при сохранении изменений\");\r\n        }\r\n    } catch (error) {\r\n        console.error('Ошибка при обновлении инвентаря:', error);\r\n    }\r\n};\r\n\r\n\r\n    // Отображение строки инвентаря\r\n    const renderRow = (item) => {\r\n        if (editingItem === item.id) {\r\n            return (\r\n                <tr key={item.id}>\r\n                    <td>{item.id}</td>\r\n                    <td>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={item.name}\r\n                            onChange={(e) => handleInputChange(e, 'name', item.id)}\r\n                            onBlur={() => handleSave(item.id)}  // Отправка изменений при завершении редактирования\r\n                        />\r\n                    </td>\r\n                    <td>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={item.category}\r\n                            onChange={(e) => handleInputChange(e, 'category', item.id)}\r\n                            onBlur={() => handleSave(item.id)}  // Отправка изменений при завершении редактирования\r\n                        />\r\n                    </td>\r\n                    <td>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={item.subcategory}\r\n                            onChange={(e) => handleInputChange(e, 'subcategory', item.id)}\r\n                            onBlur={() => handleSave(item.id)}  // Отправка изменений при завершении редактирования\r\n                        />\r\n                    </td>\r\n                    <td>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={item.model}\r\n                            onChange={(e) => handleInputChange(e, 'model', item.id)}\r\n                            onBlur={() => handleSave(item.id)}  // Отправка изменений при завершении редактирования\r\n                        />\r\n                    </td>\r\n                    <td>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={item.serial_number}\r\n                            onChange={(e) => handleInputChange(e, 'serial_number', item.id)}\r\n                            onBlur={() => handleSave(item.id)}  // Отправка изменений при завершении редактирования\r\n                        />\r\n                    </td>\r\n                    <td>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={item.notes}\r\n                            onChange={(e) => handleInputChange(e, 'notes', item.id)}\r\n                            onBlur={() => handleSave(item.id)}  // Отправка изменений при завершении редактирования\r\n                        />\r\n                    </td>\r\n                    <td>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={item.status}\r\n                            onChange={(e) => handleInputChange(e, 'status', item.id)}\r\n                            onBlur={() => handleSave(item.id)}  // Отправка изменений при завершении редактирования\r\n                        />\r\n                    </td>\r\n                    <td>\r\n                        <input\r\n                            type=\"number\"\r\n                            value={item.total}\r\n                            onChange={(e) => handleInputChange(e, 'total', item.id)}\r\n                            onBlur={() => handleSave(item.id)}  // Отправка изменений при завершении редактирования\r\n                        />\r\n                    </td>\r\n                    <td>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={item.belongs_to}\r\n                            onChange={(e) => handleInputChange(e, 'belongs_to', item.id)}\r\n                            onBlur={() => handleSave(item.id)}  // Отправка изменений при завершении редактирования\r\n                        />\r\n                    </td>\r\n                    <td>\r\n                        <button onClick={() => handleSave(item.id)}>Сохранить</button>\r\n                        <button onClick={() => setEditingItem(null)}>Отменить</button>\r\n                    </td>\r\n                </tr>\r\n            );\r\n        } else {\r\n            return (\r\n                <tr key={item.id} onClick={() => handleClickEdit(item.id)}>\r\n                    <td>{item.id}</td>\r\n                    <td>{item.name}</td>\r\n                    <td>{item.category}</td>\r\n                    <td>{item.subcategory}</td>\r\n                    <td>{item.model}</td>\r\n                    <td>{item.serial_number}</td>\r\n                    <td>{item.notes}</td>\r\n                    <td>{item.status}</td>\r\n                    <td>{item.total}</td>\r\n                    <td>{item.belongs_to}</td>\r\n                    <td>\r\n                        <button>Редактировать</button>\r\n                    </td>\r\n                </tr>\r\n            );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Инвентарь</h2>\r\n            {loading ? (\r\n                <p>Загрузка...</p>\r\n            ) : (\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>Название</th>\r\n                            <th>Категория</th>\r\n                            <th>Подкатегория</th>\r\n                            <th>Модель</th>\r\n                            <th>Серийный номер</th>\r\n                            <th>Примечания</th>\r\n                            <th>Статус</th>\r\n                            <th>Общее количество</th>\r\n                            <th>Кому принадлежит</th>\r\n                            <th>Действия</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {inventory.map(renderRow)}\r\n                    </tbody>\r\n                </table>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InventoryTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}