{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\discopony\\\\Desktop\\\\MSchool\\\\Notion automation\\\\Railway_Rent\\\\frontend\\\\src\\\\components\\\\Table.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport RentalRow from \"./RentalRow\";\nimport LoadingSpinner from \"./LoadingSpinner\";\nimport API_BASE_URL from \"../config\";\nimport { showSuccess, showError } from \"./NotificationSystem\";\nimport logo from '../logo.png';\nimport './Table.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Table = () => {\n  _s();\n  const [bookings, setBookings] = useState([]);\n  const [error, setError] = useState(null);\n  const [selectedRows, setSelectedRows] = useState(new Set());\n  useEffect(() => {\n    fetchBookings();\n  }, []);\n\n  // Обработка нажатия клавиши Delete\n  useEffect(() => {\n    const handleKeyDown = event => {\n      if (event.key === 'Delete' && selectedRows.size > 0) {\n        handleDeleteSelected();\n      }\n    };\n    document.addEventListener('keydown', handleKeyDown);\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [selectedRows]);\n  const formatDateForAPI = dateString => {\n    if (!dateString) return null;\n    const date = new Date(dateString);\n    return date.toISOString().split(\"T\")[0]; // Формат YYYY-MM-DD\n  };\n\n  // Загрузка бронирований\n  const fetchBookings = async () => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/bookings`);\n      const data = await response.json();\n      setError(null);\n      setBookings(sortBookings(data || []));\n    } catch (err) {\n      console.error(\"Ошибка загрузки бронирований:\", err);\n      showError(\"Не удалось загрузить данные аренды\");\n    }\n  };\n\n  // Функция сортировки\n  const sortBookings = bookingsList => {\n    // Фильтруем null элементы перед сортировкой\n    const validBookings = bookingsList.filter(booking => booking !== null && booking !== undefined);\n    return [...validBookings].sort((a, b) => {\n      if (!a.start_date && !b.start_date) return 0;\n      if (!a.start_date) return -1;\n      if (!b.start_date) return 1;\n      return new Date(b.start_date) - new Date(a.start_date);\n    });\n  };\n\n  // Добавление новой аренды\n  const addRental = async () => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/bookings`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          renter: \"\",\n          issuer: \"\",\n          receiver: \"\",\n          status: \"Бронь\",\n          notes: \"\",\n          equipment: [],\n          where: \"в студии\"\n        })\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`Ошибка ${response.status}: ${errorText}`);\n      }\n      const savedRental = await response.json();\n      console.log(\"📥 Созданная аренда:\", savedRental);\n      if (savedRental && typeof savedRental === 'object') {\n        setBookings(prevBookings => sortBookings([savedRental, ...prevBookings])); // ✅ Добавляем вверх + сортируем\n        showSuccess(\"Аренда создана\");\n      } else {\n        console.error(\"❌ API вернул некорректные данные:\", savedRental);\n        showError(\"Не удалось создать бронирование - некорректный ответ сервера\");\n      }\n    } catch (error) {\n      console.error(\"Ошибка создания аренды:\", error);\n      showError(error.message || \"Не удалось создать бронирование\");\n    }\n  };\n\n  // Обновление аренды\n  const updateRental = async (id, updatedData) => {\n    const formattedData = {\n      ...updatedData,\n      start_date: updatedData.start_date ? formatDateForAPI(updatedData.start_date) : undefined,\n      end_date: updatedData.end_date ? formatDateForAPI(updatedData.end_date) : undefined,\n      equipment: updatedData.equipment.map(({\n        name,\n        quantity\n      }) => ({\n        name,\n        quantity\n      })),\n      where: updatedData.where || \"в студии\" // Устанавливаем значение по умолчанию\n    };\n    console.log(\"📤 Отправляем в API:\", formattedData); // Проверяем данные перед отправкой\n\n    try {\n      const response = await fetch(`${API_BASE_URL}/bookings/${id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(formattedData)\n      });\n      if (!response.ok) {\n        throw new Error(`Ошибка ${response.status}`);\n      }\n      console.log(\"✅ Успешно обновлено!\");\n      showSuccess(\"Аренда обновлена\");\n    } catch (error) {\n      console.error(\"Ошибка обновления:\", error);\n      showError(\"Не удалось обновить аренду\");\n    }\n  };\n\n  // Обработка выделения строк\n  const handleRowSelect = (id, isSelected) => {\n    setSelectedRows(prev => {\n      const newSet = new Set(prev);\n      if (isSelected) {\n        newSet.add(id);\n      } else {\n        newSet.delete(id);\n      }\n      return newSet;\n    });\n  };\n\n  // Выделить все/снять выделение со всех\n  const handleSelectAll = isSelected => {\n    if (isSelected) {\n      setSelectedRows(new Set(bookings.map(booking => booking.id)));\n    } else {\n      setSelectedRows(new Set());\n    }\n  };\n\n  // Удаление выбранных строк\n  const handleDeleteSelected = async () => {\n    if (selectedRows.size === 0) return;\n    const confirmed = window.confirm(`Удалить ${selectedRows.size} выбранных аренд?`);\n    if (!confirmed) return;\n    try {\n      const deletePromises = Array.from(selectedRows).map(id => fetch(`${API_BASE_URL}/bookings/${id}`, {\n        method: \"DELETE\"\n      }));\n      await Promise.all(deletePromises);\n      setBookings(prevBookings => sortBookings(prevBookings.filter(booking => !selectedRows.has(booking.id))));\n      setSelectedRows(new Set());\n      showSuccess(`Успешно удалено ${selectedRows.size} аренд`);\n    } catch (error) {\n      console.error(\"Ошибка массового удаления:\", error);\n      showError(\"Не удалось удалить выбранные аренды\");\n    }\n  };\n\n  // Удаление аренды\n  const handleDelete = async id => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/bookings/${id}`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) {\n        throw new Error(`Ошибка ${response.status}`);\n      }\n      setBookings(prevBookings => sortBookings(prevBookings.filter(booking => booking.id !== id)));\n      setSelectedRows(prev => {\n        const newSet = new Set(prev);\n        newSet.delete(id);\n        return newSet;\n      });\n      showSuccess(\"Аренда удалена\");\n    } catch (error) {\n      console.error(\"Ошибка удаления:\", error);\n      showError(error.message || \"Не удалось удалить бронирование\");\n    }\n  };\n\n  // Функция для включения редактирования\n  const handleClickEdit = id => {\n    if (isEditingRow === id) {\n      setIsEditingRow(null); // Если редактируемая строка та же, что уже редактируется, отменяем редактирование\n    } else {\n      setIsEditingRow(id); // Включаем редактирование для выбранной строки\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rental-table-header-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rental-table-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-left\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addRental,\n            className: \"add-button\",\n            children: \"\\u2795 \\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0430\\u0440\\u0435\\u043D\\u0434\\u0443\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 25\n          }, this), selectedRows.size > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleDeleteSelected,\n            className: \"delete-selected-button\",\n            children: [\"\\uD83D\\uDDD1\\uFE0F \\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u0432\\u044B\\u0431\\u0440\\u0430\\u043D\\u043D\\u044B\\u0435 (\", selectedRows.size, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uD83D\\uDCCB \\u0422\\u0430\\u0431\\u043B\\u0438\\u0446\\u0430 \\u0430\\u0440\\u0435\\u043D\\u0434\\u044B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"Logo\",\n          className: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rental-table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rental-table-scroll-container\",\n        children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"rental-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  width: '40px'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: selectedRows.size === bookings.length && bookings.length > 0,\n                  onChange: e => handleSelectAll(e.target.checked),\n                  style: {\n                    transform: 'scale(1.2)'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\u0414\\u0430\\u0442\\u0430 \\u0430\\u0440\\u0435\\u043D\\u0434\\u044B\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\u0418\\u043C\\u044F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\u041A\\u0442\\u043E \\u0432\\u044B\\u0434\\u0430\\u043B\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\u041A\\u0442\\u043E \\u043F\\u0440\\u0438\\u043D\\u044F\\u043B\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\u041E\\u0431\\u043E\\u0440\\u0443\\u0434\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\u041F\\u0440\\u0438\\u043C\\u0435\\u0447\\u0430\\u043D\\u0438\\u044F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\u0413\\u0434\\u0435\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: bookings.map(booking => /*#__PURE__*/_jsxDEV(RentalRow, {\n              booking: booking,\n              onUpdate: updateRental,\n              onDelete: () => handleDelete(booking.id),\n              isSelected: selectedRows.has(booking.id),\n              onSelect: isSelected => handleRowSelect(booking.id, isSelected)\n            }, booking.id || `new-${Math.random()}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 9\n  }, this);\n};\n_s(Table, \"/aEmlMaWrcFmSDRvS/WZyfPL8B4=\");\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","useState","useEffect","RentalRow","LoadingSpinner","API_BASE_URL","showSuccess","showError","logo","jsxDEV","_jsxDEV","Table","_s","bookings","setBookings","error","setError","selectedRows","setSelectedRows","Set","fetchBookings","handleKeyDown","event","key","size","handleDeleteSelected","document","addEventListener","removeEventListener","formatDateForAPI","dateString","date","Date","toISOString","split","response","fetch","data","json","sortBookings","err","console","bookingsList","validBookings","filter","booking","undefined","sort","a","b","start_date","addRental","method","headers","body","JSON","stringify","renter","issuer","receiver","status","notes","equipment","where","ok","errorText","text","Error","savedRental","log","prevBookings","message","updateRental","id","updatedData","formattedData","end_date","map","name","quantity","handleRowSelect","isSelected","prev","newSet","add","delete","handleSelectAll","confirmed","window","confirm","deletePromises","Array","from","Promise","all","has","handleDelete","handleClickEdit","isEditingRow","setIsEditingRow","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","style","width","type","checked","length","onChange","e","target","transform","onUpdate","onDelete","onSelect","Math","random","_c","$RefreshReg$"],"sources":["C:/Users/discopony/Desktop/MSchool/Notion automation/Railway_Rent/frontend/src/components/Table.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport RentalRow from \"./RentalRow\";\nimport LoadingSpinner from \"./LoadingSpinner\";\nimport API_BASE_URL from \"../config\";\nimport { showSuccess, showError } from \"./NotificationSystem\";\nimport logo from '../logo.png'\nimport './Table.css';\n\nconst Table = () => {\n    const [bookings, setBookings] = useState([]);\n    const [error, setError] = useState(null);\n    const [selectedRows, setSelectedRows] = useState(new Set());\n\n\n    useEffect(() => {\n        fetchBookings();\n    }, []);\n\n    // Обработка нажатия клавиши Delete\n    useEffect(() => {\n        const handleKeyDown = (event) => {\n            if (event.key === 'Delete' && selectedRows.size > 0) {\n                handleDeleteSelected();\n            }\n        };\n\n        document.addEventListener('keydown', handleKeyDown);\n        return () => document.removeEventListener('keydown', handleKeyDown);\n    }, [selectedRows]);\n\n    const formatDateForAPI = (dateString) => {\n        if (!dateString) return null;\n        const date = new Date(dateString);\n        return date.toISOString().split(\"T\")[0]; // Формат YYYY-MM-DD\n    };\n\n    // Загрузка бронирований\n    const fetchBookings = async () => {\n        try {\n            const response = await fetch(`${API_BASE_URL}/bookings`);\n            const data = await response.json();\n            setError(null);\n            setBookings(sortBookings(data || []));\n        } catch (err) {\n            console.error(\"Ошибка загрузки бронирований:\", err);\n            showError(\"Не удалось загрузить данные аренды\");\n        }\n    };\n\n    // Функция сортировки\n    const sortBookings = (bookingsList) => {\n        // Фильтруем null элементы перед сортировкой\n        const validBookings = bookingsList.filter(booking => booking !== null && booking !== undefined);\n        \n        return [...validBookings].sort((a, b) => {\n            if (!a.start_date && !b.start_date) return 0;\n            if (!a.start_date) return -1;\n            if (!b.start_date) return 1;\n            return new Date(b.start_date) - new Date(a.start_date);\n        });\n    };\n\n    // Добавление новой аренды\n    const addRental = async () => {\n        try {\n            const response = await fetch(`${API_BASE_URL}/bookings`, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({\n                    renter: \"\",\n                    issuer: \"\",\n                    receiver: \"\",\n                    status: \"Бронь\",\n                    notes: \"\",\n                    equipment: [],\n                    where: \"в студии\"\n                })\n            });\n\n            if (!response.ok) {\n                const errorText = await response.text();\n                throw new Error(`Ошибка ${response.status}: ${errorText}`);\n            }\n\n            const savedRental = await response.json();\n            console.log(\"📥 Созданная аренда:\", savedRental);\n            \n            if (savedRental && typeof savedRental === 'object') {\n                setBookings(prevBookings => sortBookings([savedRental, ...prevBookings])); // ✅ Добавляем вверх + сортируем\n                showSuccess(\"Аренда создана\");\n            } else {\n                console.error(\"❌ API вернул некорректные данные:\", savedRental);\n                showError(\"Не удалось создать бронирование - некорректный ответ сервера\");\n            }\n        } catch (error) {\n            console.error(\"Ошибка создания аренды:\", error);\n            showError(error.message || \"Не удалось создать бронирование\");\n        }\n    };\n\n    // Обновление аренды\n    const updateRental = async (id, updatedData) => {\n        const formattedData = {\n            ...updatedData,\n            start_date: updatedData.start_date ? formatDateForAPI(updatedData.start_date) : undefined, \n            end_date: updatedData.end_date ? formatDateForAPI(updatedData.end_date) : undefined, \n            equipment: updatedData.equipment.map(({ name, quantity }) => ({ name, quantity })), \n            where: updatedData.where || \"в студии\" // Устанавливаем значение по умолчанию\n        };\n\n        console.log(\"📤 Отправляем в API:\", formattedData); // Проверяем данные перед отправкой\n\n        try {\n            const response = await fetch(`${API_BASE_URL}/bookings/${id}`, {\n                method: \"PUT\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(formattedData)\n            });\n\n            if (!response.ok) {\n                throw new Error(`Ошибка ${response.status}`);\n            }\n\n            console.log(\"✅ Успешно обновлено!\");\n            showSuccess(\"Аренда обновлена\");\n        } catch (error) {\n            console.error(\"Ошибка обновления:\", error);\n            showError(\"Не удалось обновить аренду\");\n        }\n    };\n\n    // Обработка выделения строк\n    const handleRowSelect = (id, isSelected) => {\n        setSelectedRows(prev => {\n            const newSet = new Set(prev);\n            if (isSelected) {\n                newSet.add(id);\n            } else {\n                newSet.delete(id);\n            }\n            return newSet;\n        });\n    };\n\n    // Выделить все/снять выделение со всех\n    const handleSelectAll = (isSelected) => {\n        if (isSelected) {\n            setSelectedRows(new Set(bookings.map(booking => booking.id)));\n        } else {\n            setSelectedRows(new Set());\n        }\n    };\n\n    // Удаление выбранных строк\n    const handleDeleteSelected = async () => {\n        if (selectedRows.size === 0) return;\n        \n        const confirmed = window.confirm(`Удалить ${selectedRows.size} выбранных аренд?`);\n        if (!confirmed) return;\n\n        try {\n            const deletePromises = Array.from(selectedRows).map(id =>\n                fetch(`${API_BASE_URL}/bookings/${id}`, { method: \"DELETE\" })\n            );\n            \n            await Promise.all(deletePromises);\n            \n            setBookings(prevBookings => sortBookings(prevBookings.filter(booking => !selectedRows.has(booking.id))));\n            setSelectedRows(new Set());\n            showSuccess(`Успешно удалено ${selectedRows.size} аренд`);\n        } catch (error) {\n            console.error(\"Ошибка массового удаления:\", error);\n            showError(\"Не удалось удалить выбранные аренды\");\n        }\n    };\n\n    // Удаление аренды\n    const handleDelete = async (id) => {\n        try {\n            const response = await fetch(`${API_BASE_URL}/bookings/${id}`, { method: 'DELETE' });\n\n            if (!response.ok) {\n                throw new Error(`Ошибка ${response.status}`);\n            }\n\n            setBookings(prevBookings => sortBookings(prevBookings.filter(booking => booking.id !== id)));\n            setSelectedRows(prev => {\n                const newSet = new Set(prev);\n                newSet.delete(id);\n                return newSet;\n            });\n            showSuccess(\"Аренда удалена\");\n        } catch (error) {\n            console.error(\"Ошибка удаления:\", error);\n            showError(error.message || \"Не удалось удалить бронирование\");\n        }\n    };\n\n    // Функция для включения редактирования\n    const handleClickEdit = (id) => {\n        if (isEditingRow === id) {\n            setIsEditingRow(null); // Если редактируемая строка та же, что уже редактируется, отменяем редактирование\n        } else {\n            setIsEditingRow(id); // Включаем редактирование для выбранной строки\n        }\n    };\n\n    return (\n        <div className=\"page-container\">\n            <div className=\"rental-table-header-container\">\n                <div className=\"rental-table-header\">\n                    <div className=\"header-left\">\n                        <button onClick={addRental} className=\"add-button\">➕ Добавить аренду</button>\n                        {selectedRows.size > 0 && (\n                            <button onClick={handleDeleteSelected} className=\"delete-selected-button\">\n                                🗑️ Удалить выбранные ({selectedRows.size})\n                            </button>\n                        )}\n                    </div>\n                    <h2>📋 Таблица аренды</h2>\n                    <img src={logo} alt=\"Logo\" className=\"logo\" /> \n                </div>\n            </div>\n            \n            <div className=\"rental-table-container\">\n                <div className=\"rental-table-scroll-container\">\n                    {error && <p className=\"error-message\">{error}</p>}\n                    <table className=\"rental-table\">\n                        <thead>\n                            <tr>\n                                <th style={{ width: '40px' }}>\n                                    <input\n                                        type=\"checkbox\"\n                                        checked={selectedRows.size === bookings.length && bookings.length > 0}\n                                        onChange={(e) => handleSelectAll(e.target.checked)}\n                                        style={{ transform: 'scale(1.2)' }}\n                                    />\n                                </th>\n                                <th>Дата аренды</th>\n                                <th>Имя</th>\n                                <th>Кто выдал</th>\n                                <th>Кто принял</th>\n                                <th>Оборудование</th>\n                                <th>Примечания</th>\n                                <th>Где</th> \n                                <th>Статус</th>\n                                <th></th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {bookings.map((booking) => (\n                                <RentalRow \n                                    key={booking.id || `new-${Math.random()}`}\n                                    booking={booking}\n                                    onUpdate={updateRental}\n                                    onDelete={() => handleDelete(booking.id)}\n                                    isSelected={selectedRows.has(booking.id)}\n                                    onSelect={(isSelected) => handleRowSelect(booking.id, isSelected)}\n                                />\n                            ))}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Table;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,YAAY,MAAM,WAAW;AACpC,SAASC,WAAW,EAAEC,SAAS,QAAQ,sBAAsB;AAC7D,OAAOC,IAAI,MAAM,aAAa;AAC9B,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACgB,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,IAAIkB,GAAG,CAAC,CAAC,CAAC;EAG3DjB,SAAS,CAAC,MAAM;IACZkB,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAlB,SAAS,CAAC,MAAM;IACZ,MAAMmB,aAAa,GAAIC,KAAK,IAAK;MAC7B,IAAIA,KAAK,CAACC,GAAG,KAAK,QAAQ,IAAIN,YAAY,CAACO,IAAI,GAAG,CAAC,EAAE;QACjDC,oBAAoB,CAAC,CAAC;MAC1B;IACJ,CAAC;IAEDC,QAAQ,CAACC,gBAAgB,CAAC,SAAS,EAAEN,aAAa,CAAC;IACnD,OAAO,MAAMK,QAAQ,CAACE,mBAAmB,CAAC,SAAS,EAAEP,aAAa,CAAC;EACvE,CAAC,EAAE,CAACJ,YAAY,CAAC,CAAC;EAElB,MAAMY,gBAAgB,GAAIC,UAAU,IAAK;IACrC,IAAI,CAACA,UAAU,EAAE,OAAO,IAAI;IAC5B,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,UAAU,CAAC;IACjC,OAAOC,IAAI,CAACE,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC7C,CAAC;;EAED;EACA,MAAMd,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACA,MAAMe,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAG/B,YAAY,WAAW,CAAC;MACxD,MAAMgC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCtB,QAAQ,CAAC,IAAI,CAAC;MACdF,WAAW,CAACyB,YAAY,CAACF,IAAI,IAAI,EAAE,CAAC,CAAC;IACzC,CAAC,CAAC,OAAOG,GAAG,EAAE;MACVC,OAAO,CAAC1B,KAAK,CAAC,+BAA+B,EAAEyB,GAAG,CAAC;MACnDjC,SAAS,CAAC,oCAAoC,CAAC;IACnD;EACJ,CAAC;;EAED;EACA,MAAMgC,YAAY,GAAIG,YAAY,IAAK;IACnC;IACA,MAAMC,aAAa,GAAGD,YAAY,CAACE,MAAM,CAACC,OAAO,IAAIA,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAKC,SAAS,CAAC;IAE/F,OAAO,CAAC,GAAGH,aAAa,CAAC,CAACI,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;MACrC,IAAI,CAACD,CAAC,CAACE,UAAU,IAAI,CAACD,CAAC,CAACC,UAAU,EAAE,OAAO,CAAC;MAC5C,IAAI,CAACF,CAAC,CAACE,UAAU,EAAE,OAAO,CAAC,CAAC;MAC5B,IAAI,CAACD,CAAC,CAACC,UAAU,EAAE,OAAO,CAAC;MAC3B,OAAO,IAAIlB,IAAI,CAACiB,CAAC,CAACC,UAAU,CAAC,GAAG,IAAIlB,IAAI,CAACgB,CAAC,CAACE,UAAU,CAAC;IAC1D,CAAC,CAAC;EACN,CAAC;;EAED;EACA,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAI;MACA,MAAMhB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAG/B,YAAY,WAAW,EAAE;QACrD+C,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjBC,MAAM,EAAE,EAAE;UACVC,MAAM,EAAE,EAAE;UACVC,QAAQ,EAAE,EAAE;UACZC,MAAM,EAAE,OAAO;UACfC,KAAK,EAAE,EAAE;UACTC,SAAS,EAAE,EAAE;UACbC,KAAK,EAAE;QACX,CAAC;MACL,CAAC,CAAC;MAEF,IAAI,CAAC5B,QAAQ,CAAC6B,EAAE,EAAE;QACd,MAAMC,SAAS,GAAG,MAAM9B,QAAQ,CAAC+B,IAAI,CAAC,CAAC;QACvC,MAAM,IAAIC,KAAK,CAAC,UAAUhC,QAAQ,CAACyB,MAAM,KAAKK,SAAS,EAAE,CAAC;MAC9D;MAEA,MAAMG,WAAW,GAAG,MAAMjC,QAAQ,CAACG,IAAI,CAAC,CAAC;MACzCG,OAAO,CAAC4B,GAAG,CAAC,sBAAsB,EAAED,WAAW,CAAC;MAEhD,IAAIA,WAAW,IAAI,OAAOA,WAAW,KAAK,QAAQ,EAAE;QAChDtD,WAAW,CAACwD,YAAY,IAAI/B,YAAY,CAAC,CAAC6B,WAAW,EAAE,GAAGE,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3EhE,WAAW,CAAC,gBAAgB,CAAC;MACjC,CAAC,MAAM;QACHmC,OAAO,CAAC1B,KAAK,CAAC,mCAAmC,EAAEqD,WAAW,CAAC;QAC/D7D,SAAS,CAAC,8DAA8D,CAAC;MAC7E;IACJ,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACZ0B,OAAO,CAAC1B,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/CR,SAAS,CAACQ,KAAK,CAACwD,OAAO,IAAI,iCAAiC,CAAC;IACjE;EACJ,CAAC;;EAED;EACA,MAAMC,YAAY,GAAG,MAAAA,CAAOC,EAAE,EAAEC,WAAW,KAAK;IAC5C,MAAMC,aAAa,GAAG;MAClB,GAAGD,WAAW;MACdxB,UAAU,EAAEwB,WAAW,CAACxB,UAAU,GAAGrB,gBAAgB,CAAC6C,WAAW,CAACxB,UAAU,CAAC,GAAGJ,SAAS;MACzF8B,QAAQ,EAAEF,WAAW,CAACE,QAAQ,GAAG/C,gBAAgB,CAAC6C,WAAW,CAACE,QAAQ,CAAC,GAAG9B,SAAS;MACnFgB,SAAS,EAAEY,WAAW,CAACZ,SAAS,CAACe,GAAG,CAAC,CAAC;QAAEC,IAAI;QAAEC;MAAS,CAAC,MAAM;QAAED,IAAI;QAAEC;MAAS,CAAC,CAAC,CAAC;MAClFhB,KAAK,EAAEW,WAAW,CAACX,KAAK,IAAI,UAAU,CAAC;IAC3C,CAAC;IAEDtB,OAAO,CAAC4B,GAAG,CAAC,sBAAsB,EAAEM,aAAa,CAAC,CAAC,CAAC;;IAEpD,IAAI;MACA,MAAMxC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAG/B,YAAY,aAAaoE,EAAE,EAAE,EAAE;QAC3DrB,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACmB,aAAa;MACtC,CAAC,CAAC;MAEF,IAAI,CAACxC,QAAQ,CAAC6B,EAAE,EAAE;QACd,MAAM,IAAIG,KAAK,CAAC,UAAUhC,QAAQ,CAACyB,MAAM,EAAE,CAAC;MAChD;MAEAnB,OAAO,CAAC4B,GAAG,CAAC,sBAAsB,CAAC;MACnC/D,WAAW,CAAC,kBAAkB,CAAC;IACnC,CAAC,CAAC,OAAOS,KAAK,EAAE;MACZ0B,OAAO,CAAC1B,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC1CR,SAAS,CAAC,4BAA4B,CAAC;IAC3C;EACJ,CAAC;;EAED;EACA,MAAMyE,eAAe,GAAGA,CAACP,EAAE,EAAEQ,UAAU,KAAK;IACxC/D,eAAe,CAACgE,IAAI,IAAI;MACpB,MAAMC,MAAM,GAAG,IAAIhE,GAAG,CAAC+D,IAAI,CAAC;MAC5B,IAAID,UAAU,EAAE;QACZE,MAAM,CAACC,GAAG,CAACX,EAAE,CAAC;MAClB,CAAC,MAAM;QACHU,MAAM,CAACE,MAAM,CAACZ,EAAE,CAAC;MACrB;MACA,OAAOU,MAAM;IACjB,CAAC,CAAC;EACN,CAAC;;EAED;EACA,MAAMG,eAAe,GAAIL,UAAU,IAAK;IACpC,IAAIA,UAAU,EAAE;MACZ/D,eAAe,CAAC,IAAIC,GAAG,CAACN,QAAQ,CAACgE,GAAG,CAAChC,OAAO,IAAIA,OAAO,CAAC4B,EAAE,CAAC,CAAC,CAAC;IACjE,CAAC,MAAM;MACHvD,eAAe,CAAC,IAAIC,GAAG,CAAC,CAAC,CAAC;IAC9B;EACJ,CAAC;;EAED;EACA,MAAMM,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAIR,YAAY,CAACO,IAAI,KAAK,CAAC,EAAE;IAE7B,MAAM+D,SAAS,GAAGC,MAAM,CAACC,OAAO,CAAC,WAAWxE,YAAY,CAACO,IAAI,mBAAmB,CAAC;IACjF,IAAI,CAAC+D,SAAS,EAAE;IAEhB,IAAI;MACA,MAAMG,cAAc,GAAGC,KAAK,CAACC,IAAI,CAAC3E,YAAY,CAAC,CAAC4D,GAAG,CAACJ,EAAE,IAClDrC,KAAK,CAAC,GAAG/B,YAAY,aAAaoE,EAAE,EAAE,EAAE;QAAErB,MAAM,EAAE;MAAS,CAAC,CAChE,CAAC;MAED,MAAMyC,OAAO,CAACC,GAAG,CAACJ,cAAc,CAAC;MAEjC5E,WAAW,CAACwD,YAAY,IAAI/B,YAAY,CAAC+B,YAAY,CAAC1B,MAAM,CAACC,OAAO,IAAI,CAAC5B,YAAY,CAAC8E,GAAG,CAAClD,OAAO,CAAC4B,EAAE,CAAC,CAAC,CAAC,CAAC;MACxGvD,eAAe,CAAC,IAAIC,GAAG,CAAC,CAAC,CAAC;MAC1Bb,WAAW,CAAC,mBAAmBW,YAAY,CAACO,IAAI,QAAQ,CAAC;IAC7D,CAAC,CAAC,OAAOT,KAAK,EAAE;MACZ0B,OAAO,CAAC1B,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClDR,SAAS,CAAC,qCAAqC,CAAC;IACpD;EACJ,CAAC;;EAED;EACA,MAAMyF,YAAY,GAAG,MAAOvB,EAAE,IAAK;IAC/B,IAAI;MACA,MAAMtC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAG/B,YAAY,aAAaoE,EAAE,EAAE,EAAE;QAAErB,MAAM,EAAE;MAAS,CAAC,CAAC;MAEpF,IAAI,CAACjB,QAAQ,CAAC6B,EAAE,EAAE;QACd,MAAM,IAAIG,KAAK,CAAC,UAAUhC,QAAQ,CAACyB,MAAM,EAAE,CAAC;MAChD;MAEA9C,WAAW,CAACwD,YAAY,IAAI/B,YAAY,CAAC+B,YAAY,CAAC1B,MAAM,CAACC,OAAO,IAAIA,OAAO,CAAC4B,EAAE,KAAKA,EAAE,CAAC,CAAC,CAAC;MAC5FvD,eAAe,CAACgE,IAAI,IAAI;QACpB,MAAMC,MAAM,GAAG,IAAIhE,GAAG,CAAC+D,IAAI,CAAC;QAC5BC,MAAM,CAACE,MAAM,CAACZ,EAAE,CAAC;QACjB,OAAOU,MAAM;MACjB,CAAC,CAAC;MACF7E,WAAW,CAAC,gBAAgB,CAAC;IACjC,CAAC,CAAC,OAAOS,KAAK,EAAE;MACZ0B,OAAO,CAAC1B,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;MACxCR,SAAS,CAACQ,KAAK,CAACwD,OAAO,IAAI,iCAAiC,CAAC;IACjE;EACJ,CAAC;;EAED;EACA,MAAM0B,eAAe,GAAIxB,EAAE,IAAK;IAC5B,IAAIyB,YAAY,KAAKzB,EAAE,EAAE;MACrB0B,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;IAC3B,CAAC,MAAM;MACHA,eAAe,CAAC1B,EAAE,CAAC,CAAC,CAAC;IACzB;EACJ,CAAC;EAED,oBACI/D,OAAA;IAAK0F,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC3B3F,OAAA;MAAK0F,SAAS,EAAC,+BAA+B;MAAAC,QAAA,eAC1C3F,OAAA;QAAK0F,SAAS,EAAC,qBAAqB;QAAAC,QAAA,gBAChC3F,OAAA;UAAK0F,SAAS,EAAC,aAAa;UAAAC,QAAA,gBACxB3F,OAAA;YAAQ4F,OAAO,EAAEnD,SAAU;YAACiD,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAC;UAAiB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EAC5EzF,YAAY,CAACO,IAAI,GAAG,CAAC,iBAClBd,OAAA;YAAQ4F,OAAO,EAAE7E,oBAAqB;YAAC2E,SAAS,EAAC,wBAAwB;YAAAC,QAAA,GAAC,wHAC/C,EAACpF,YAAY,CAACO,IAAI,EAAC,GAC9C;UAAA;YAAA+E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CACX;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACNhG,OAAA;UAAA2F,QAAA,EAAI;QAAiB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1BhG,OAAA;UAAKiG,GAAG,EAAEnG,IAAK;UAACoG,GAAG,EAAC,MAAM;UAACR,SAAS,EAAC;QAAM;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAENhG,OAAA;MAAK0F,SAAS,EAAC,wBAAwB;MAAAC,QAAA,eACnC3F,OAAA;QAAK0F,SAAS,EAAC,+BAA+B;QAAAC,QAAA,GACzCtF,KAAK,iBAAIL,OAAA;UAAG0F,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAEtF;QAAK;UAAAwF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAClDhG,OAAA;UAAO0F,SAAS,EAAC,cAAc;UAAAC,QAAA,gBAC3B3F,OAAA;YAAA2F,QAAA,eACI3F,OAAA;cAAA2F,QAAA,gBACI3F,OAAA;gBAAImG,KAAK,EAAE;kBAAEC,KAAK,EAAE;gBAAO,CAAE;gBAAAT,QAAA,eACzB3F,OAAA;kBACIqG,IAAI,EAAC,UAAU;kBACfC,OAAO,EAAE/F,YAAY,CAACO,IAAI,KAAKX,QAAQ,CAACoG,MAAM,IAAIpG,QAAQ,CAACoG,MAAM,GAAG,CAAE;kBACtEC,QAAQ,EAAGC,CAAC,IAAK7B,eAAe,CAAC6B,CAAC,CAACC,MAAM,CAACJ,OAAO,CAAE;kBACnDH,KAAK,EAAE;oBAAEQ,SAAS,EAAE;kBAAa;gBAAE;kBAAAd,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACtC;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACF,CAAC,eACLhG,OAAA;gBAAA2F,QAAA,EAAI;cAAW;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACpBhG,OAAA;gBAAA2F,QAAA,EAAI;cAAG;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACZhG,OAAA;gBAAA2F,QAAA,EAAI;cAAS;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAClBhG,OAAA;gBAAA2F,QAAA,EAAI;cAAU;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACnBhG,OAAA;gBAAA2F,QAAA,EAAI;cAAY;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACrBhG,OAAA;gBAAA2F,QAAA,EAAI;cAAU;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACnBhG,OAAA;gBAAA2F,QAAA,EAAI;cAAG;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACZhG,OAAA;gBAAA2F,QAAA,EAAI;cAAM;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACfhG,OAAA;gBAAA6F,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACThG,OAAA;gBAAA6F,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACT;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,eACRhG,OAAA;YAAA2F,QAAA,EACKxF,QAAQ,CAACgE,GAAG,CAAEhC,OAAO,iBAClBnC,OAAA,CAACP,SAAS;cAEN0C,OAAO,EAAEA,OAAQ;cACjByE,QAAQ,EAAE9C,YAAa;cACvB+C,QAAQ,EAAEA,CAAA,KAAMvB,YAAY,CAACnD,OAAO,CAAC4B,EAAE,CAAE;cACzCQ,UAAU,EAAEhE,YAAY,CAAC8E,GAAG,CAAClD,OAAO,CAAC4B,EAAE,CAAE;cACzC+C,QAAQ,EAAGvC,UAAU,IAAKD,eAAe,CAACnC,OAAO,CAAC4B,EAAE,EAAEQ,UAAU;YAAE,GAL7DpC,OAAO,CAAC4B,EAAE,IAAI,OAAOgD,IAAI,CAACC,MAAM,CAAC,CAAC,EAAE;cAAAnB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAM5C,CACJ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAC9F,EAAA,CArQID,KAAK;AAAAgH,EAAA,GAALhH,KAAK;AAuQX,eAAeA,KAAK;AAAC,IAAAgH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}