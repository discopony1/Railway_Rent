{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\discopony\\\\Desktop\\\\MSchool\\\\Notion automation\\\\Railway_Rent\\\\frontend\\\\src\\\\components\\\\Inventory.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InventoryTable = () => {\n  _s();\n  const [inventory, setInventory] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [editingItem, setEditingItem] = useState(null); // Для редактирования\n  const [updatedData, setUpdatedData] = useState({}); // Для отслеживания обновленных данных\n  const [initialValues, setInitialValues] = useState({}); // Для хранения начальных значений полей\n\n  // Загрузка данных с сервера\n  useEffect(() => {\n    const fetchInventory = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5000/api/inventory\");\n        if (!response.ok) {\n          throw new Error(`Ошибка загрузки: ${response.status}`);\n        }\n        const data = await response.json();\n        setInventory(data);\n      } catch (error) {\n        console.error('Ошибка загрузки инвентаря:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchInventory();\n  }, []);\n\n  // Сохранение начальных значений при начале редактирования\n  const handleClickEdit = itemId => {\n    setEditingItem(itemId); // Устанавливаем редактируемую строку\n    // Сохраняем начальные значения, чтобы сравнивать их позже\n    setInitialValues({\n      ...inventory.find(item => item.id === itemId)\n    });\n  };\n\n  // Обработчик изменения данных в таблице\n  const handleInputChange = (e, field, id) => {\n    const value = e.target.value;\n    setInventory(prevInventory => prevInventory.map(item => item.id === id ? {\n      ...item,\n      [field]: value\n    } : item));\n\n    // Обновляем состояние для отслеживания изменений\n    setUpdatedData(prev => {\n      const updated = {\n        ...prev\n      };\n\n      // Обновляем старое значение сразу, чтобы следующее сравнение было корректным\n      if (!updated[id]) {\n        updated[id] = {};\n      }\n      updated[id][field] = value;\n      return updated;\n    });\n  };\n\n  // Сохранение изменений\n  const handleSave = async id => {\n    const updatedItem = inventory.find(item => item.id === id);\n    const updatedFields = updatedData[id] || {};\n    const updatedDataForAPI = {}; // Теперь сюда будем добавлять все данные, не только измененные\n\n    let hasChanges = false;\n\n    // Сравниваем данные по каждому полю, добавляем все поля\n    const allFields = ['name', 'category', 'subcategory', 'model', 'serial_number', 'notes', 'status', 'total', 'belongs_to'];\n\n    // Заполняем updatedDataForAPI всеми полями\n    allFields.forEach(field => {\n      const oldValue = updatedItem[field];\n      const newValue = updatedFields[field];\n\n      // Если значение изменилось или было новым\n      if (newValue !== oldValue) {\n        updatedDataForAPI[field] = newValue; // Передаем только измененные или новые значения\n        hasChanges = true;\n      } else {\n        // Если значение не изменилось, отправляем старое значение\n        updatedDataForAPI[field] = oldValue;\n      }\n    });\n    console.log(\"Sending updated data:\", updatedDataForAPI);\n\n    // Если нет изменений, не отправляем\n    if (!hasChanges) {\n      console.error('Нет изменений для отправки');\n      return; // Прерываем отправку, если данных нет\n    }\n    try {\n      const response = await fetch(`http://localhost:5000/api/inventory/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updatedDataForAPI) // Отправляем все поля\n      });\n      if (response.ok) {\n        alert(\"Инвентарь обновлен\");\n        setEditingItem(null); // Закрытие режима редактирования\n      } else {\n        alert(\"Ошибка при сохранении изменений\");\n      }\n    } catch (error) {\n      console.error('Ошибка при обновлении инвентаря:', error);\n    }\n  };\n\n  // Отображение строки инвентаря\n  const renderRow = item => {\n    if (editingItem === item.id) {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: item.name,\n            onChange: e => handleInputChange(e, 'name', item.id),\n            onBlur: () => handleSave(item.id) // Отправка изменений при завершении редактирования\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: item.category,\n            onChange: e => handleInputChange(e, 'category', item.id),\n            onBlur: () => handleSave(item.id) // Отправка изменений при завершении редактирования\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: item.subcategory,\n            onChange: e => handleInputChange(e, 'subcategory', item.id),\n            onBlur: () => handleSave(item.id) // Отправка изменений при завершении редактирования\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: item.model,\n            onChange: e => handleInputChange(e, 'model', item.id),\n            onBlur: () => handleSave(item.id) // Отправка изменений при завершении редактирования\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: item.serial_number,\n            onChange: e => handleInputChange(e, 'serial_number', item.id),\n            onBlur: () => handleSave(item.id) // Отправка изменений при завершении редактирования\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: item.notes,\n            onChange: e => handleInputChange(e, 'notes', item.id),\n            onBlur: () => handleSave(item.id) // Отправка изменений при завершении редактирования\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: item.status,\n            onChange: e => handleInputChange(e, 'status', item.id),\n            onBlur: () => handleSave(item.id) // Отправка изменений при завершении редактирования\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: item.total,\n            onChange: e => handleInputChange(e, 'total', item.id),\n            onBlur: () => handleSave(item.id) // Отправка изменений при завершении редактирования\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: item.belongs_to,\n            onChange: e => handleInputChange(e, 'belongs_to', item.id),\n            onBlur: () => handleSave(item.id) // Отправка изменений при завершении редактирования\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSave(item.id),\n            children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setEditingItem(null),\n            children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        onClick: () => handleClickEdit(item.id),\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.subcategory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.model\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.serial_number\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.notes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.total\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.belongs_to\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 21\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0418\\u043D\\u0432\\u0435\\u043D\\u0442\\u0430\\u0440\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u041A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u041F\\u043E\\u0434\\u043A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u041C\\u043E\\u0434\\u0435\\u043B\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u0421\\u0435\\u0440\\u0438\\u0439\\u043D\\u044B\\u0439 \\u043D\\u043E\\u043C\\u0435\\u0440\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u041F\\u0440\\u0438\\u043C\\u0435\\u0447\\u0430\\u043D\\u0438\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u041E\\u0431\\u0449\\u0435\\u0435 \\u043A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u041A\\u043E\\u043C\\u0443 \\u043F\\u0440\\u0438\\u043D\\u0430\\u0434\\u043B\\u0435\\u0436\\u0438\\u0442\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u0414\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: inventory.map(renderRow)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 228,\n    columnNumber: 9\n  }, this);\n};\n_s(InventoryTable, \"hTvOTdXUoYUOpOOF35hGYsN2ZEw=\");\n_c = InventoryTable;\nexport default InventoryTable;\nvar _c;\n$RefreshReg$(_c, \"InventoryTable\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","jsxDEV","_jsxDEV","InventoryTable","_s","inventory","setInventory","loading","setLoading","editingItem","setEditingItem","updatedData","setUpdatedData","initialValues","setInitialValues","fetchInventory","response","fetch","ok","Error","status","data","json","error","console","handleClickEdit","itemId","find","item","id","handleInputChange","e","field","value","target","prevInventory","map","prev","updated","handleSave","updatedItem","updatedFields","updatedDataForAPI","hasChanges","allFields","forEach","oldValue","newValue","log","method","headers","body","JSON","stringify","alert","renderRow","children","fileName","_jsxFileName","lineNumber","columnNumber","type","name","onChange","onBlur","category","subcategory","model","serial_number","notes","total","belongs_to","onClick","_c","$RefreshReg$"],"sources":["C:/Users/discopony/Desktop/MSchool/Notion automation/Railway_Rent/frontend/src/components/Inventory.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\n\r\nconst InventoryTable = () => {\r\n    const [inventory, setInventory] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [editingItem, setEditingItem] = useState(null); // Для редактирования\r\n    const [updatedData, setUpdatedData] = useState({}); // Для отслеживания обновленных данных\r\n    const [initialValues, setInitialValues] = useState({}); // Для хранения начальных значений полей\r\n\r\n    // Загрузка данных с сервера\r\n    useEffect(() => {\r\n        const fetchInventory = async () => {\r\n            try {\r\n                const response = await fetch(\"http://localhost:5000/api/inventory\");\r\n                if (!response.ok) {\r\n                    throw new Error(`Ошибка загрузки: ${response.status}`);\r\n                }\r\n                const data = await response.json();\r\n                setInventory(data);\r\n            } catch (error) {\r\n                console.error('Ошибка загрузки инвентаря:', error);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchInventory();\r\n    }, []);\r\n\r\n    // Сохранение начальных значений при начале редактирования\r\n    const handleClickEdit = (itemId) => {\r\n        setEditingItem(itemId); // Устанавливаем редактируемую строку\r\n        // Сохраняем начальные значения, чтобы сравнивать их позже\r\n        setInitialValues({\r\n            ...inventory.find((item) => item.id === itemId),\r\n        });\r\n    };\r\n\r\n    // Обработчик изменения данных в таблице\r\n    const handleInputChange = (e, field, id) => {\r\n        const value = e.target.value;\r\n\r\n        setInventory(prevInventory =>\r\n            prevInventory.map(item =>\r\n                item.id === id ? { ...item, [field]: value } : item\r\n            )\r\n        );\r\n\r\n        // Обновляем состояние для отслеживания изменений\r\n        setUpdatedData(prev => {\r\n            const updated = { ...prev };\r\n\r\n            // Обновляем старое значение сразу, чтобы следующее сравнение было корректным\r\n            if (!updated[id]) {\r\n                updated[id] = {};\r\n            }\r\n\r\n            updated[id][field] = value;\r\n\r\n            return updated;\r\n        });\r\n    };\r\n\r\n    // Сохранение изменений\r\nconst handleSave = async (id) => {\r\n    const updatedItem = inventory.find((item) => item.id === id);\r\n    const updatedFields = updatedData[id] || {};\r\n\r\n    const updatedDataForAPI = {}; // Теперь сюда будем добавлять все данные, не только измененные\r\n\r\n    let hasChanges = false;\r\n\r\n    // Сравниваем данные по каждому полю, добавляем все поля\r\n    const allFields = [\r\n        'name', 'category', 'subcategory', 'model', 'serial_number', 'notes', 'status', 'total', 'belongs_to'\r\n    ];\r\n\r\n    // Заполняем updatedDataForAPI всеми полями\r\n    allFields.forEach((field) => {\r\n        const oldValue = updatedItem[field];\r\n        const newValue = updatedFields[field];\r\n\r\n        // Если значение изменилось или было новым\r\n        if (newValue !== oldValue) {\r\n            updatedDataForAPI[field] = newValue; // Передаем только измененные или новые значения\r\n            hasChanges = true;\r\n        } else {\r\n            // Если значение не изменилось, отправляем старое значение\r\n            updatedDataForAPI[field] = oldValue;\r\n        }\r\n    });\r\n\r\n    console.log(\"Sending updated data:\", updatedDataForAPI);\r\n\r\n    // Если нет изменений, не отправляем\r\n    if (!hasChanges) {\r\n        console.error('Нет изменений для отправки');\r\n        return;  // Прерываем отправку, если данных нет\r\n    }\r\n\r\n    try {\r\n        const response = await fetch(`http://localhost:5000/api/inventory/${id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(updatedDataForAPI), // Отправляем все поля\r\n        });\r\n\r\n        if (response.ok) {\r\n            alert(\"Инвентарь обновлен\");\r\n            setEditingItem(null); // Закрытие режима редактирования\r\n        } else {\r\n            alert(\"Ошибка при сохранении изменений\");\r\n        }\r\n    } catch (error) {\r\n        console.error('Ошибка при обновлении инвентаря:', error);\r\n    }\r\n};\r\n\r\n\r\n    // Отображение строки инвентаря\r\n    const renderRow = (item) => {\r\n        if (editingItem === item.id) {\r\n            return (\r\n                <tr key={item.id}>\r\n                    <td>{item.id}</td> {/* ID теперь отображаем только для отладки */}\r\n                    <td>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={item.name}\r\n                            onChange={(e) => handleInputChange(e, 'name', item.id)}\r\n                            onBlur={() => handleSave(item.id)}  // Отправка изменений при завершении редактирования\r\n                        />\r\n                    </td>\r\n                    <td>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={item.category}\r\n                            onChange={(e) => handleInputChange(e, 'category', item.id)}\r\n                            onBlur={() => handleSave(item.id)}  // Отправка изменений при завершении редактирования\r\n                        />\r\n                    </td>\r\n                    <td>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={item.subcategory}\r\n                            onChange={(e) => handleInputChange(e, 'subcategory', item.id)}\r\n                            onBlur={() => handleSave(item.id)}  // Отправка изменений при завершении редактирования\r\n                        />\r\n                    </td>\r\n                    <td>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={item.model}\r\n                            onChange={(e) => handleInputChange(e, 'model', item.id)}\r\n                            onBlur={() => handleSave(item.id)}  // Отправка изменений при завершении редактирования\r\n                        />\r\n                    </td>\r\n                    <td>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={item.serial_number}\r\n                            onChange={(e) => handleInputChange(e, 'serial_number', item.id)}\r\n                            onBlur={() => handleSave(item.id)}  // Отправка изменений при завершении редактирования\r\n                        />\r\n                    </td>\r\n                    <td>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={item.notes}\r\n                            onChange={(e) => handleInputChange(e, 'notes', item.id)}\r\n                            onBlur={() => handleSave(item.id)}  // Отправка изменений при завершении редактирования\r\n                        />\r\n                    </td>\r\n                    <td>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={item.status}\r\n                            onChange={(e) => handleInputChange(e, 'status', item.id)}\r\n                            onBlur={() => handleSave(item.id)}  // Отправка изменений при завершении редактирования\r\n                        />\r\n                    </td>\r\n                    <td>\r\n                        <input\r\n                            type=\"number\"\r\n                            value={item.total}\r\n                            onChange={(e) => handleInputChange(e, 'total', item.id)}\r\n                            onBlur={() => handleSave(item.id)}  // Отправка изменений при завершении редактирования\r\n                        />\r\n                    </td>\r\n                    <td>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={item.belongs_to}\r\n                            onChange={(e) => handleInputChange(e, 'belongs_to', item.id)}\r\n                            onBlur={() => handleSave(item.id)}  // Отправка изменений при завершении редактирования\r\n                        />\r\n                    </td>\r\n                    <td>\r\n                        <button onClick={() => handleSave(item.id)}>Сохранить</button>\r\n                        <button onClick={() => setEditingItem(null)}>Отменить</button>\r\n                    </td>\r\n                </tr>\r\n            );\r\n        } else {\r\n            return (\r\n                <tr key={item.id} onClick={() => handleClickEdit(item.id)}>\r\n                    <td>{item.id}</td>\r\n                    <td>{item.name}</td>\r\n                    <td>{item.category}</td>\r\n                    <td>{item.subcategory}</td>\r\n                    <td>{item.model}</td>\r\n                    <td>{item.serial_number}</td>\r\n                    <td>{item.notes}</td>\r\n                    <td>{item.status}</td>\r\n                    <td>{item.total}</td>\r\n                    <td>{item.belongs_to}</td>\r\n                    <td>\r\n                        <button>Редактировать</button>\r\n                    </td>\r\n                </tr>\r\n            );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Инвентарь</h2>\r\n            {loading ? (\r\n                <p>Загрузка...</p>\r\n            ) : (\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>Название</th>\r\n                            <th>Категория</th>\r\n                            <th>Подкатегория</th>\r\n                            <th>Модель</th>\r\n                            <th>Серийный номер</th>\r\n                            <th>Примечания</th>\r\n                            <th>Статус</th>\r\n                            <th>Общее количество</th>\r\n                            <th>Кому принадлежит</th>\r\n                            <th>Действия</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {inventory.map(renderRow)}\r\n                    </tbody>\r\n                </table>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InventoryTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}