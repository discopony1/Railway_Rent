{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\discopony\\\\Desktop\\\\MSchool\\\\Notion automation\\\\Railway_Rent\\\\frontend\\\\src\\\\components\\\\DebugToggle.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DebugToggle({\n  onToggle\n}) {\n  _s();\n  const [debugMode, setDebugMode] = useState(false);\n  useEffect(() => {\n    const savedDebugMode = JSON.parse(localStorage.getItem(\"debugMode\"));\n    if (savedDebugMode) {\n      setDebugMode(savedDebugMode);\n      onToggle(savedDebugMode);\n    }\n  }, [onToggle]);\n  const toggleDebug = () => {\n    const newDebugMode = !debugMode;\n    setDebugMode(newDebugMode);\n    localStorage.setItem(\"debugMode\", JSON.stringify(newDebugMode));\n    onToggle(newDebugMode);\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: toggleDebug,\n    style: {\n      marginBottom: \"10px\"\n    },\n    children: debugMode ? \"üîß Debug ON\" : \"‚öôÔ∏è Debug OFF\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(DebugToggle, \"WBq1++UvW/H7yeMx0+LO31aLZGQ=\");\n_c = DebugToggle;\nexport default DebugToggle;\nvar _c;\n$RefreshReg$(_c, \"DebugToggle\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","DebugToggle","onToggle","_s","debugMode","setDebugMode","savedDebugMode","JSON","parse","localStorage","getItem","toggleDebug","newDebugMode","setItem","stringify","onClick","style","marginBottom","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/discopony/Desktop/MSchool/Notion automation/Railway_Rent/frontend/src/components/DebugToggle.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nfunction DebugToggle({ onToggle }) {\r\n  const [debugMode, setDebugMode] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const savedDebugMode = JSON.parse(localStorage.getItem(\"debugMode\"));\r\n    if (savedDebugMode) {\r\n      setDebugMode(savedDebugMode);\r\n      onToggle(savedDebugMode);\r\n    }\r\n  }, [onToggle]);\r\n\r\n  const toggleDebug = () => {\r\n    const newDebugMode = !debugMode;\r\n    setDebugMode(newDebugMode);\r\n    localStorage.setItem(\"debugMode\", JSON.stringify(newDebugMode));\r\n    onToggle(newDebugMode);\r\n  };\r\n\r\n  return (\r\n    <button onClick={toggleDebug} style={{ marginBottom: \"10px\" }}>\r\n      {debugMode ? \"üîß Debug ON\" : \"‚öôÔ∏è Debug OFF\"}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default DebugToggle;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,WAAWA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACjC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAEjDC,SAAS,CAAC,MAAM;IACd,MAAMQ,cAAc,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC;IACpE,IAAIJ,cAAc,EAAE;MAClBD,YAAY,CAACC,cAAc,CAAC;MAC5BJ,QAAQ,CAACI,cAAc,CAAC;IAC1B;EACF,CAAC,EAAE,CAACJ,QAAQ,CAAC,CAAC;EAEd,MAAMS,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,YAAY,GAAG,CAACR,SAAS;IAC/BC,YAAY,CAACO,YAAY,CAAC;IAC1BH,YAAY,CAACI,OAAO,CAAC,WAAW,EAAEN,IAAI,CAACO,SAAS,CAACF,YAAY,CAAC,CAAC;IAC/DV,QAAQ,CAACU,YAAY,CAAC;EACxB,CAAC;EAED,oBACEZ,OAAA;IAAQe,OAAO,EAAEJ,WAAY;IAACK,KAAK,EAAE;MAAEC,YAAY,EAAE;IAAO,CAAE;IAAAC,QAAA,EAC3Dd,SAAS,GAAG,aAAa,GAAG;EAAc;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEb;AAACnB,EAAA,CAvBQF,WAAW;AAAAsB,EAAA,GAAXtB,WAAW;AAyBpB,eAAeA,WAAW;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}